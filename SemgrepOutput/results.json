{
    "errors": [
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.remote-property-injection.remote-property-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js",
            "rule_id": "javascript.express.security.audit.remote-property-injection.remote-property-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js",
            "rule_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js",
            "rule_id": "typescript.react.security.audit.react-unsanitized-method.react-unsanitized-method",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.audit.express-ssrf.express-ssrf on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js",
            "rule_id": "javascript.express.security.audit.express-ssrf.express-ssrf",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.express-wkhtml-injection.express-wkhtmltoimage-injection on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js",
            "rule_id": "javascript.express.security.express-wkhtml-injection.express-wkhtmltoimage-injection",
            "type": "Timeout"
        },
        {
            "code": 2,
            "level": "warn",
            "message": "Timeout when running javascript.express.security.require-request.require-request on /mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js:\n ",
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js",
            "rule_id": "javascript.express.security.require-request.require-request",
            "type": "Timeout"
        }
    ],
    "interfile_languages_used": [],
    "paths": {
        "scanned": [
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/pnotify.core.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/styles.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/pnotify.core.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/styles.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/6nmy7z65gsxc.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/bounce-modal.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/gumroad.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/jrumble.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/overlay-63c6c0f7.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/overlay-f8f9015a9aabefa09736.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/pnotify.core.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/signup.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/styles.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/pnotify.core.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/styles.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/styles.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pnotify.core.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/styles.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/bootstrap.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/fbevents.js",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/pnotify.core.min.css",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/styles.css"
        ]
    },
    "results": [
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "ef46757015515235b3b4a10f6441cfc591a05f79fe0d28f278e14177c9a1bb9a7cb7233159b93afc8b836c02affee71367469174dc93692a2fea20c6a9dedc20_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "ef46757015515235b3b4a10f6441cfc591a05f79fe0d28f278e14177c9a1bb9a7cb7233159b93afc8b836c02affee71367469174dc93692a2fea20c6a9dedc20_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "ef46757015515235b3b4a10f6441cfc591a05f79fe0d28f278e14177c9a1bb9a7cb7233159b93afc8b836c02affee71367469174dc93692a2fea20c6a9dedc20_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b920071537cdd58ff2420375fdfe82c75c1745e4632d23dd4f7ec68b37c101aff2c65496b5fdba68747ea2185fe30083802fdbb8fb78dfe1a7ac38d55289d5de_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "ef46757015515235b3b4a10f6441cfc591a05f79fe0d28f278e14177c9a1bb9a7cb7233159b93afc8b836c02affee71367469174dc93692a2fea20c6a9dedc20_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
            "end": {
                "col": 158,
                "line": 3,
                "offset": 886
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b078f1e3578249554e872da75ca5b192f6c6f5b9a81c99842fa1f9fd5c748b2682c2caefb17f21e60b53352f0abd039ece3b6ee7c675001527f9c62cb0e6db26_0",
                "is_ignored": false,
                "lines": "function x(a,b,c){if(b)a:{var d=a.split(\".\");a=d.length===1;var e=d[0],f;!a&&e in q?f=q:f=fa;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in f))break a;f=f[g]}d=d[d.length-1];c=ha&&c===\"es6\"?f[d]:null;b=b(c);b!=null&&(a?da(q,d,{configurable:!0,writable:!0,value:b}):b!==c&&(la[d]===void 0&&(a=Math.random()*1E9>>>0,la[d]=ha?fa.Symbol(d):\"$jscp$\"+a+\"$\"+d),da(f,la[d],{configurable:!0,writable:!0,value:b})))}}",
                "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13373,
                            "rule_id": "QrUpbJ",
                            "rv_id": 834148,
                            "url": "https://semgrep.dev/playground/r/GxTDERG/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                            "version_id": "GxTDERG"
                        }
                    },
                    "shortlink": "https://sg.run/w1DB",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "typescript"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$A": {
                        "abstract_content": "g",
                        "end": {
                            "col": 157,
                            "line": 3,
                            "offset": 885
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "d[e]",
                            "svalue_end": {
                                "col": 130,
                                "line": 3,
                                "offset": 858
                            },
                            "svalue_start": {
                                "col": 126,
                                "line": 3,
                                "offset": 854
                            }
                        },
                        "start": {
                            "col": 156,
                            "line": 3,
                            "offset": 884
                        }
                    },
                    "$SMTH": {
                        "abstract_content": "f",
                        "end": {
                            "col": 153,
                            "line": 3,
                            "offset": 881
                        },
                        "start": {
                            "col": 152,
                            "line": 3,
                            "offset": 880
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
            "start": {
                "col": 152,
                "line": 3,
                "offset": 880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 134,
                "line": 34,
                "offset": 14293
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 134,
                                    "line": 34,
                                    "offset": 14293
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 97,
                                    "line": 34,
                                    "offset": 14256
                                }
                            },
                            "new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "e0090a66d92f9c7d6285d8dadefcde37a9c4e46b4a3e5f6151d40e072b492eaafdd3b84664372e230f162aef0717c1f404351b92ff42e733a5dcd7a5bb1ce0d0_0",
                "is_ignored": false,
                "lines": "function I(a,b,c){var d=J;if(c?d.g.hasOwnProperty(c)&&d.g[c]==\"\":1){var e;e=(e=Ob())?(e=e.match(new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")))?e[0]:null:null;if(e)a=e;else a:{if(!yb()&&!xb()&&(e=Math.random(),e<b)){e=tb();a=a[Math.floor(e*a.length)];break a}a=null}a&&a!=\"\"&&(c?d.g.hasOwnProperty(c)&&(d.g[c]=a):d.M[a]=!0)}}function M(a){var b=J;return b.g.hasOwnProperty(a)?b.g[a]:\"\"}function Pb(){var a=J,b=[];ub(a.M,function(c,d){b.push(d)});ub(a.g,function(c){c!=\"\"&&b.push(c)});return b};var Qb={aa:2,ka:13,ia:14,ea:16,ca:17,ba:18,Z:19,ma:20,la:21,Y:22},J=null;function Rb(){return!!J&&(M(20)==\"466465926\"||M(20)==\"466465925\")}function Sb(){return!!J&&M(16)==\"592230571\"}function Tb(){return!!J&&(M(22)==\"512247839\"||M(22)==\"512247838\")};function Ub(a){var b=b===void 0?B:b;var c,d;return((c=b.performance)==null?void 0:(d=c.timing)==null?void 0:d[a])||0};function Vb(){var a=Wb,b=\"J\";if(a.J&&a.hasOwnProperty(b))return a.J;b=new a;return a.J=b};var Xb={fa:0,V:1,ga:2,X:3,W:4};function Wb(){this.g={}}function Yb(a,b,c){typeof c===\"number\"&&c>0&&(a.g[b]=Math.round(c))}function Zb(a){var b=Vb();var c=c===void 0?B:c;c=c.performance;Yb(b,a,c&&c.now?c.now():null)}function $b(){function a(){return Yb(b,0,Ub(\"loadEventStart\")-Ub(\"navigationStart\"))}var b=Vb();Ub(\"loadEventStart\")!=0?a():window.addEventListener(\"load\",a)}function ac(){var a=Vb();return u(Object,\"values\").call(Object,Xb).map(function(b){return[b,a.g[b]||0]})};var bc=H(\"false\");var cc={};function dc(a){cc.TAGGING=cc.TAGGING||[];cc.TAGGING[a]=!0};var ec=[];function N(a){return ec[a]===void 0?!1:ec[a]};function fc(){}function gc(a){return typeof a===\"function\"}function hc(a){return typeof a===\"string\"}function ic(a,b){if(a&&Array.isArray(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]}function jc(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])};function kc(a){a=lc(a);return Ja(a)}function lc(a){return a===null?\"null\":a===void 0?\"undefined\":a};var O=window,P=document,mc=navigator,nc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},oc={onload:1,src:1,width:1,height:1,style:1};function pc(a,b,c){b&&jc(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 13,
                            "line": 34,
                            "offset": 14172
                        },
                        "start": {
                            "col": 12,
                            "line": 34,
                            "offset": 14171
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
            "start": {
                "col": 97,
                "line": 34,
                "offset": 14256
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 1331,
                "line": 39,
                "offset": 19511
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1331,
                                    "line": 39,
                                    "offset": 19511
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 1267,
                                    "line": 39,
                                    "offset": 19447
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "e0090a66d92f9c7d6285d8dadefcde37a9c4e46b4a3e5f6151d40e072b492eaafdd3b84664372e230f162aef0717c1f404351b92ff42e733a5dcd7a5bb1ce0d0_1",
                "is_ignored": false,
                "lines": "3)<<4|l>>4];l=a[(l&15)<<2|h>>6];h=a[h&63];c[e++]=g+k+l+h}g=0;h=d;switch(b.length-f){case 2:g=b[f+1],h=a[(g&15)<<2]||d;case 1:b=b[f],c[e]=a[b>>2]+a[(b&3)<<4|g>>4]+h+d}return c.join(\"\")};function Ac(a,b,c,d,e,f){var g=pb(c,\"fmt\");if(d){var h=pb(c,\"random\"),k=pb(c,\"label\")||\"\";if(!h)return!1;h=zc(decodeURIComponent(k.replace(/\\+/g,\" \"))+\":\"+decodeURIComponent(h.replace(/\\+/g,\" \")));if(!vc(a,h,d))return!1}g&&Number(g)!==4&&(c=rb(c,\"rfmt\",g));c=rb(c,\"fmt\",4);qc(c,function(){a.google_noFurtherRedirects&&d&&(a.google_noFurtherRedirects=null,d())},e,f,b.getElementsByTagName(\"script\")[0].parentElement||void 0);return!0};var Bc={},Cc=(Bc.k={G:/^[\\w-]+$/},Bc.b={G:/^[\\w-]+$/,K:!0},Bc.i={G:/^[1-9]\\d*$/},Bc.u={G:/^[1-9]\\d*$/},Bc);var Dc={},Gc=(Dc[5]={P:{2:Ec},H:[\"k\",\"i\",\"b\",\"u\"]},Dc[4]={P:{2:Ec,GCL:Fc},H:[\"k\",\"i\",\"b\"]},Dc);function Ec(a,b){var c=a.split(\".\");if(c.length===3&&(a={},b=Gc[b])){b=b.H;c=z(c[2].split(\"$\"));for(var d=c.next();!d.done;d=c.next()){d=d.value;var e=d[0];if(b.indexOf(e)!==-1)try{var f=decodeURIComponent(d.substring(1)),g=Cc[e];g&&(g.K?(a[e]=a[e]||[],a[e].push(f)):a[e]=f)}catch(h){}}return a}}function Fc(a){a=a.split(\".\");a.shift();var b=a.shift(),c=a.shift(),d={};return d.k=c,d.i=b,d.b=a,d};function Hc(a){var b=[],c=P.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({L:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(f,g){return g.timestamp-f.timestamp});return b}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 1232,
                            "line": 39,
                            "offset": 19412
                        },
                        "start": {
                            "col": 1231,
                            "line": 39,
                            "offset": 19411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
            "start": {
                "col": 1267,
                "line": 39,
                "offset": 19447
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 372,
                "line": 79,
                "offset": 38083
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "b",
                            "location": {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 372,
                                    "line": 79,
                                    "offset": 38083
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 343,
                                    "line": 79,
                                    "offset": 38054
                                }
                            },
                            "new RegExp(\";\"+b+\"=([^;?]+)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            },
                            "b"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3fb994fb4b232448352d7759b3bb448adedb031338dc0f8cc2468ac9084e3bce9e2866e383b274e74c62c44fc1d3a6ef99246cfaf43116ac1c9ed9033b351a24_0",
                "is_ignored": false,
                "lines": "function $d(a,b,c,d){for(var e=U(S())?Ic(\"_gac_gb\",!0):{},f=[],g=!1,h=z(u(Object,\"keys\").call(Object,e)),k=h.next();!k.done;k=h.next()){k=k.value;var l=Rd(\"_gac_gb_\"+k,b,c,d);g=g||l.length!==0&&l.some(function(m){return m===1});f.push(k+\":\"+l.join(\",\"))}return{T:g?f.join(\";\"):\"\",S:Zd(a,e,Yd)}}function ae(a,b){return(a=a.location.href.match(new RegExp(\";\"+b+\"=([^;?]+)\")))&&a.length===2&&a[1].match(Vd)?a[1]:void 0}",
                "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "b",
                        "end": {
                            "col": 310,
                            "line": 79,
                            "offset": 38021
                        },
                        "start": {
                            "col": 309,
                            "line": 79,
                            "offset": 38020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
            "start": {
                "col": 343,
                "line": 79,
                "offset": 38054
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 399,
                "line": 117,
                "offset": 57785
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a4f100bb0c2e8dc7549ad20ff1a81e8cf8015cb32ec9a47215c515b4c826d3894acc9d2b593b1a12fb9305a540961225d3a5c1be2dadbe37ae3ea0601aa0f272_0",
                "is_ignored": false,
                "lines": "(function(a,b,c){if(a){Re(a,c,a);try{if(Ge(a)){var d=Ie(a);J&&I([\"375603260\",\"375603261\"],Lb?1:0,19);J&&I([\"512247838\",\"512247839\"],Mb?1:0,22);if(Te(c)==3){var e=\"google_conversion_\"+Math.floor(Math.random()*1E9);Ma(c,Xe({id:e}));We(function(){try{Je(c,d);var f=c.getElementById(e);if(f){var g=kc(Ee(a,b,c,d));if(f.nodeType===1&&/^(script|style)$/i.test(f.tagName))throw Error(\"\");f.innerHTML=Ka(g)}}catch(h){}},c)}else Je(c,d),Ma(c,kc(Ee(a,b,c,d)))}}catch(f){}He(a)}})(window,navigator,document);}).call(this);",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "f",
                        "end": {
                            "col": 383,
                            "line": 117,
                            "offset": 57769
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "c.getElementById(e)",
                            "svalue_end": {
                                "col": 282,
                                "line": 117,
                                "offset": 57668
                            },
                            "svalue_start": {
                                "col": 263,
                                "line": 117,
                                "offset": 57649
                            }
                        },
                        "start": {
                            "col": 382,
                            "line": 117,
                            "offset": 57768
                        }
                    },
                    "$HTML": {
                        "abstract_content": "Ka(g)",
                        "end": {
                            "col": 399,
                            "line": 117,
                            "offset": 57785
                        },
                        "start": {
                            "col": 394,
                            "line": 117,
                            "offset": 57780
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/conversion.js",
            "start": {
                "col": 382,
                "line": 117,
                "offset": 57768
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1070,
                "line": 58,
                "offset": 3759
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c5dd15ee7cb623aa7297e25d21be5e1b2371c5d4ef70cf5bdea8a9ea65310df63a3f9bcecb0a9c016000fa6a66d6997ecb9c18f6feaa1799b8e623f63fb7c0a6_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"",
                        "end": {
                            "col": 1060,
                            "line": 58,
                            "offset": 3749
                        },
                        "start": {
                            "col": 148,
                            "line": 58,
                            "offset": 2837
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 141,
                "line": 58,
                "offset": 2830
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1149,
                "line": 58,
                "offset": 3838
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "1218d3a50ce3ef6332cd5e6f2acf9de61e123bda0f320119d9704ef7aba7c600c9118f02548b1a6cbf1730708519e81cca87922fd5e055cdc301e6e4a308cfdb_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"",
                        "end": {
                            "col": 1139,
                            "line": 58,
                            "offset": 3828
                        },
                        "start": {
                            "col": 1077,
                            "line": 58,
                            "offset": 3766
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 1070,
                "line": 58,
                "offset": 3759
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 92,
                "line": 123,
                "offset": 7062
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "1318c4e8836d69a64afe2cd1a73313a6b4232dcdd47debc43ca1f91c1da867d2bee9646ee0d2c9593d19dd5a64490a8c3a0746cd107e0f1c05f00f4fdc82fda3_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"",
                        "end": {
                            "col": 82,
                            "line": 123,
                            "offset": 7052
                        },
                        "start": {
                            "col": 10,
                            "line": 123,
                            "offset": 6980
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 3,
                "line": 123,
                "offset": 6973
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 99,
                "line": 128,
                "offset": 7449
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "72e753f0bd468682c645bf7200a8e3992c754355935e69b6fcb90de7352ca2385da4f4c923ac50a3584ca20ea8822859886574a810e0bf3ff29e700bc3a5f2bb_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 128,
                            "offset": 7439
                        },
                        "start": {
                            "col": 10,
                            "line": 128,
                            "offset": 7360
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 3,
                "line": 128,
                "offset": 7353
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 123,
                "line": 129,
                "offset": 7573
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "003155507f3613442316aa65258b28c7ddc82eae555746a7ef0cf32db9ba19f48d401aa441987954d13dbc4b89cb305900492c089083e629b446752938ebe3f6_0",
                "is_ignored": false,
                "lines": "  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\"",
                        "end": {
                            "col": 122,
                            "line": 129,
                            "offset": 7572
                        },
                        "start": {
                            "col": 8,
                            "line": 129,
                            "offset": 7458
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 3,
                "line": 129,
                "offset": 7453
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 198,
                "offset": 9801
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4c28c9812785643d5e34d03c0b03cba0f2682df964cb4013c74cf3069f6f3a66c375c252092886d691d69fa2c305c9b43de8c88d59506879478b403cd86c5087_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783874647&amp;cv=9&amp;fst=1729783874647&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465926%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=6&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Ffaq%2F&amp;tiba=Frequently%20Asked%20Questions%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\"",
                        "end": {
                            "col": 89,
                            "line": 197,
                            "offset": 9785
                        },
                        "start": {
                            "col": 12,
                            "line": 197,
                            "offset": 9708
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 5,
                "line": 197,
                "offset": 9701
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 690,
                "line": 198,
                "offset": 10477
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "2d001b6d601fe695f10a24c5663160f8d8e58b0ccf60eaee72ce600b02d7d914e5cbb23ec2ad9cb08a873aa0a03174fe48d5b970b502ce37b7b71d285c73c285_0",
                "is_ignored": false,
                "lines": "    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783874647&amp;cv=9&amp;fst=1729783874647&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465926%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=6&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Ffaq%2F&amp;tiba=Frequently%20Asked%20Questions%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783874647&amp;cv=9&amp;fst=1729783874647&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465926%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=6&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Ffaq%2F&amp;tiba=Frequently%20Asked%20Questions%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 680,
                            "line": 198,
                            "offset": 10467
                        },
                        "start": {
                            "col": 21,
                            "line": 198,
                            "offset": 9808
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 14,
                "line": 198,
                "offset": 9801
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 687,
                "line": 215,
                "offset": 11756
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "110278e8b51282bbd41e0e1767e4ec04f3c95d1db529c7b160a4d7a8501ed2786054dce736fed0d0871c67e2746b2844068e7690025d61f59b2faff806b6996e_0",
                "is_ignored": false,
                "lines": "<script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783874669&amp;cv=11&amp;fst=1729783874669&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Ffaq%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Frequently%20Asked%20Questions%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></body></html>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783874669&amp;cv=11&amp;fst=1729783874669&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Ffaq%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Frequently%20Asked%20Questions%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 677,
                            "line": 215,
                            "offset": 11746
                        },
                        "start": {
                            "col": 8,
                            "line": 215,
                            "offset": 11077
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/faq/main/faq.html",
            "start": {
                "col": 1,
                "line": 215,
                "offset": 11070
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "741d53edf17bd6ff4e8dd2a701fc3ab5e60eb3021b3a56e08b42c904fa580e837595995c401b573f3fbb5840d9141194df06fc383350d49d0cd96ab9bfb3d4ed_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "741d53edf17bd6ff4e8dd2a701fc3ab5e60eb3021b3a56e08b42c904fa580e837595995c401b573f3fbb5840d9141194df06fc383350d49d0cd96ab9bfb3d4ed_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "741d53edf17bd6ff4e8dd2a701fc3ab5e60eb3021b3a56e08b42c904fa580e837595995c401b573f3fbb5840d9141194df06fc383350d49d0cd96ab9bfb3d4ed_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "ef9c6dbfe2d566c3faf67ab1dcd9b1c5ed8d3abc7994a0b837c1d2e7226468703ec522b6476bb4373882bc64da19c23c9218b9a2b0c7dff7eee3219ccfab69da_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "741d53edf17bd6ff4e8dd2a701fc3ab5e60eb3021b3a56e08b42c904fa580e837595995c401b573f3fbb5840d9141194df06fc383350d49d0cd96ab9bfb3d4ed_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
            "end": {
                "col": 158,
                "line": 3,
                "offset": 886
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "cdaa9fd10a94cbb5840d66453b7d3b77165bdba582048ac0b38feddcd30dfd8ddf0399506f31c7275fd8696e4b109269a1e895098e0d017abc21a08a93773a7e_0",
                "is_ignored": false,
                "lines": "function x(a,b,c){if(b)a:{var d=a.split(\".\");a=d.length===1;var e=d[0],f;!a&&e in q?f=q:f=fa;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in f))break a;f=f[g]}d=d[d.length-1];c=ha&&c===\"es6\"?f[d]:null;b=b(c);b!=null&&(a?da(q,d,{configurable:!0,writable:!0,value:b}):b!==c&&(la[d]===void 0&&(a=Math.random()*1E9>>>0,la[d]=ha?fa.Symbol(d):\"$jscp$\"+a+\"$\"+d),da(f,la[d],{configurable:!0,writable:!0,value:b})))}}",
                "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13373,
                            "rule_id": "QrUpbJ",
                            "rv_id": 834148,
                            "url": "https://semgrep.dev/playground/r/GxTDERG/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                            "version_id": "GxTDERG"
                        }
                    },
                    "shortlink": "https://sg.run/w1DB",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "typescript"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$A": {
                        "abstract_content": "g",
                        "end": {
                            "col": 157,
                            "line": 3,
                            "offset": 885
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "d[e]",
                            "svalue_end": {
                                "col": 130,
                                "line": 3,
                                "offset": 858
                            },
                            "svalue_start": {
                                "col": 126,
                                "line": 3,
                                "offset": 854
                            }
                        },
                        "start": {
                            "col": 156,
                            "line": 3,
                            "offset": 884
                        }
                    },
                    "$SMTH": {
                        "abstract_content": "f",
                        "end": {
                            "col": 153,
                            "line": 3,
                            "offset": 881
                        },
                        "start": {
                            "col": 152,
                            "line": 3,
                            "offset": 880
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
            "start": {
                "col": 152,
                "line": 3,
                "offset": 880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 134,
                "line": 34,
                "offset": 14293
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 134,
                                    "line": 34,
                                    "offset": 14293
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 97,
                                    "line": 34,
                                    "offset": 14256
                                }
                            },
                            "new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "f72ff47dad0ce40bbf9255290301dd24dc757abb6a89cdd2ee31e9bb7c5dd959360ca76b9bd8723a46a58291c197aeba42985cdf92bb5435d96681f04ea8645a_0",
                "is_ignored": false,
                "lines": "function I(a,b,c){var d=J;if(c?d.g.hasOwnProperty(c)&&d.g[c]==\"\":1){var e;e=(e=Ob())?(e=e.match(new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")))?e[0]:null:null;if(e)a=e;else a:{if(!yb()&&!xb()&&(e=Math.random(),e<b)){e=tb();a=a[Math.floor(e*a.length)];break a}a=null}a&&a!=\"\"&&(c?d.g.hasOwnProperty(c)&&(d.g[c]=a):d.M[a]=!0)}}function M(a){var b=J;return b.g.hasOwnProperty(a)?b.g[a]:\"\"}function Pb(){var a=J,b=[];ub(a.M,function(c,d){b.push(d)});ub(a.g,function(c){c!=\"\"&&b.push(c)});return b};var Qb={aa:2,ka:13,ia:14,ea:16,ca:17,ba:18,Z:19,ma:20,la:21,Y:22},J=null;function Rb(){return!!J&&(M(20)==\"466465926\"||M(20)==\"466465925\")}function Sb(){return!!J&&M(16)==\"592230571\"}function Tb(){return!!J&&(M(22)==\"512247839\"||M(22)==\"512247838\")};function Ub(a){var b=b===void 0?B:b;var c,d;return((c=b.performance)==null?void 0:(d=c.timing)==null?void 0:d[a])||0};function Vb(){var a=Wb,b=\"J\";if(a.J&&a.hasOwnProperty(b))return a.J;b=new a;return a.J=b};var Xb={fa:0,V:1,ga:2,X:3,W:4};function Wb(){this.g={}}function Yb(a,b,c){typeof c===\"number\"&&c>0&&(a.g[b]=Math.round(c))}function Zb(a){var b=Vb();var c=c===void 0?B:c;c=c.performance;Yb(b,a,c&&c.now?c.now():null)}function $b(){function a(){return Yb(b,0,Ub(\"loadEventStart\")-Ub(\"navigationStart\"))}var b=Vb();Ub(\"loadEventStart\")!=0?a():window.addEventListener(\"load\",a)}function ac(){var a=Vb();return u(Object,\"values\").call(Object,Xb).map(function(b){return[b,a.g[b]||0]})};var bc=H(\"false\");var cc={};function dc(a){cc.TAGGING=cc.TAGGING||[];cc.TAGGING[a]=!0};var ec=[];function N(a){return ec[a]===void 0?!1:ec[a]};function fc(){}function gc(a){return typeof a===\"function\"}function hc(a){return typeof a===\"string\"}function ic(a,b){if(a&&Array.isArray(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]}function jc(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])};function kc(a){a=lc(a);return Ja(a)}function lc(a){return a===null?\"null\":a===void 0?\"undefined\":a};var O=window,P=document,mc=navigator,nc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},oc={onload:1,src:1,width:1,height:1,style:1};function pc(a,b,c){b&&jc(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 13,
                            "line": 34,
                            "offset": 14172
                        },
                        "start": {
                            "col": 12,
                            "line": 34,
                            "offset": 14171
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
            "start": {
                "col": 97,
                "line": 34,
                "offset": 14256
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 1331,
                "line": 39,
                "offset": 19511
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1331,
                                    "line": 39,
                                    "offset": 19511
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 1267,
                                    "line": 39,
                                    "offset": 19447
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "f72ff47dad0ce40bbf9255290301dd24dc757abb6a89cdd2ee31e9bb7c5dd959360ca76b9bd8723a46a58291c197aeba42985cdf92bb5435d96681f04ea8645a_1",
                "is_ignored": false,
                "lines": "3)<<4|l>>4];l=a[(l&15)<<2|h>>6];h=a[h&63];c[e++]=g+k+l+h}g=0;h=d;switch(b.length-f){case 2:g=b[f+1],h=a[(g&15)<<2]||d;case 1:b=b[f],c[e]=a[b>>2]+a[(b&3)<<4|g>>4]+h+d}return c.join(\"\")};function Ac(a,b,c,d,e,f){var g=pb(c,\"fmt\");if(d){var h=pb(c,\"random\"),k=pb(c,\"label\")||\"\";if(!h)return!1;h=zc(decodeURIComponent(k.replace(/\\+/g,\" \"))+\":\"+decodeURIComponent(h.replace(/\\+/g,\" \")));if(!vc(a,h,d))return!1}g&&Number(g)!==4&&(c=rb(c,\"rfmt\",g));c=rb(c,\"fmt\",4);qc(c,function(){a.google_noFurtherRedirects&&d&&(a.google_noFurtherRedirects=null,d())},e,f,b.getElementsByTagName(\"script\")[0].parentElement||void 0);return!0};var Bc={},Cc=(Bc.k={G:/^[\\w-]+$/},Bc.b={G:/^[\\w-]+$/,K:!0},Bc.i={G:/^[1-9]\\d*$/},Bc.u={G:/^[1-9]\\d*$/},Bc);var Dc={},Gc=(Dc[5]={P:{2:Ec},H:[\"k\",\"i\",\"b\",\"u\"]},Dc[4]={P:{2:Ec,GCL:Fc},H:[\"k\",\"i\",\"b\"]},Dc);function Ec(a,b){var c=a.split(\".\");if(c.length===3&&(a={},b=Gc[b])){b=b.H;c=z(c[2].split(\"$\"));for(var d=c.next();!d.done;d=c.next()){d=d.value;var e=d[0];if(b.indexOf(e)!==-1)try{var f=decodeURIComponent(d.substring(1)),g=Cc[e];g&&(g.K?(a[e]=a[e]||[],a[e].push(f)):a[e]=f)}catch(h){}}return a}}function Fc(a){a=a.split(\".\");a.shift();var b=a.shift(),c=a.shift(),d={};return d.k=c,d.i=b,d.b=a,d};function Hc(a){var b=[],c=P.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({L:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(f,g){return g.timestamp-f.timestamp});return b}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 1232,
                            "line": 39,
                            "offset": 19412
                        },
                        "start": {
                            "col": 1231,
                            "line": 39,
                            "offset": 19411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
            "start": {
                "col": 1267,
                "line": 39,
                "offset": 19447
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 372,
                "line": 79,
                "offset": 38083
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "b",
                            "location": {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 372,
                                    "line": 79,
                                    "offset": 38083
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 343,
                                    "line": 79,
                                    "offset": 38054
                                }
                            },
                            "new RegExp(\";\"+b+\"=([^;?]+)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            },
                            "b"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3d08b24d4b6036cd28a1f8fda530ac9553252752f78ee61d0f69e12d5e6a24b508b66e9f4229621a52510eacfcf142c6c032c4d30aad1de54548bceebc566942_0",
                "is_ignored": false,
                "lines": "function $d(a,b,c,d){for(var e=U(S())?Ic(\"_gac_gb\",!0):{},f=[],g=!1,h=z(u(Object,\"keys\").call(Object,e)),k=h.next();!k.done;k=h.next()){k=k.value;var l=Rd(\"_gac_gb_\"+k,b,c,d);g=g||l.length!==0&&l.some(function(m){return m===1});f.push(k+\":\"+l.join(\",\"))}return{T:g?f.join(\";\"):\"\",S:Zd(a,e,Yd)}}function ae(a,b){return(a=a.location.href.match(new RegExp(\";\"+b+\"=([^;?]+)\")))&&a.length===2&&a[1].match(Vd)?a[1]:void 0}",
                "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "b",
                        "end": {
                            "col": 310,
                            "line": 79,
                            "offset": 38021
                        },
                        "start": {
                            "col": 309,
                            "line": 79,
                            "offset": 38020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
            "start": {
                "col": 343,
                "line": 79,
                "offset": 38054
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 399,
                "line": 117,
                "offset": 57785
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "1f983d809d5b58affa1012dffc9259f0ce889ae10aa2c05aab2504829007dd011428894b7e5e17c329174c9937ad3e4194aeec92de5ec132c88786fb7b287931_0",
                "is_ignored": false,
                "lines": "(function(a,b,c){if(a){Re(a,c,a);try{if(Ge(a)){var d=Ie(a);J&&I([\"375603260\",\"375603261\"],Lb?1:0,19);J&&I([\"512247838\",\"512247839\"],Mb?1:0,22);if(Te(c)==3){var e=\"google_conversion_\"+Math.floor(Math.random()*1E9);Ma(c,Xe({id:e}));We(function(){try{Je(c,d);var f=c.getElementById(e);if(f){var g=kc(Ee(a,b,c,d));if(f.nodeType===1&&/^(script|style)$/i.test(f.tagName))throw Error(\"\");f.innerHTML=Ka(g)}}catch(h){}},c)}else Je(c,d),Ma(c,kc(Ee(a,b,c,d)))}}catch(f){}He(a)}})(window,navigator,document);}).call(this);",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "f",
                        "end": {
                            "col": 383,
                            "line": 117,
                            "offset": 57769
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "c.getElementById(e)",
                            "svalue_end": {
                                "col": 282,
                                "line": 117,
                                "offset": 57668
                            },
                            "svalue_start": {
                                "col": 263,
                                "line": 117,
                                "offset": 57649
                            }
                        },
                        "start": {
                            "col": 382,
                            "line": 117,
                            "offset": 57768
                        }
                    },
                    "$HTML": {
                        "abstract_content": "Ka(g)",
                        "end": {
                            "col": 399,
                            "line": 117,
                            "offset": 57785
                        },
                        "start": {
                            "col": 394,
                            "line": 117,
                            "offset": 57780
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/conversion.js",
            "start": {
                "col": 382,
                "line": 117,
                "offset": 57768
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1070,
                "line": 58,
                "offset": 3772
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "617b529be4c16b49bef3896a5f55a17e2c6c95bd19321bc23c2582b5fce0d072b7fc7dfdb884c9666c83422bf49c98f93accdbdddfe8adb32c868140cc97f329_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"",
                        "end": {
                            "col": 1060,
                            "line": 58,
                            "offset": 3762
                        },
                        "start": {
                            "col": 148,
                            "line": 58,
                            "offset": 2850
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 141,
                "line": 58,
                "offset": 2843
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1149,
                "line": 58,
                "offset": 3851
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c520028a37b4646a1d3e30b7838329c0a590c80fcc88f6f42a8ff9034d01f23e30400978f5f4a47e80323c7a4bc2be7fe7393dc4079e8b61925b2c6b632bad81_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"",
                        "end": {
                            "col": 1139,
                            "line": 58,
                            "offset": 3841
                        },
                        "start": {
                            "col": 1077,
                            "line": 58,
                            "offset": 3779
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 1070,
                "line": 58,
                "offset": 3772
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 92,
                "line": 115,
                "offset": 6194
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "062d7d7f38735f8758d51ef0b96e303c64ee4efc32f1b5f846e36c65e99a92d5fb28cf6bbc31c22cb991e7444609fd8bede9e0a38755de4e1969bf9b3f7f7835_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"",
                        "end": {
                            "col": 82,
                            "line": 115,
                            "offset": 6184
                        },
                        "start": {
                            "col": 10,
                            "line": 115,
                            "offset": 6112
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 3,
                "line": 115,
                "offset": 6105
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 99,
                "line": 120,
                "offset": 6581
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b022c5f085f6100bdb0bed78214c0192c8d426628b51f794a2a943f0dff6782805ad960e31d6701aaf23e640ad2138abbe1a5000622a2698d121f1748c2e74e5_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 120,
                            "offset": 6571
                        },
                        "start": {
                            "col": 10,
                            "line": 120,
                            "offset": 6492
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 3,
                "line": 120,
                "offset": 6485
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 123,
                "line": 121,
                "offset": 6705
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "d1b66dfe994f83a8cac6d29dc72a1da10e2f4246fe1ef85a3eab45ff6c363535e98f112e29e8036ba9844c3cd9ea9eb1e7d0b1291218945fb704e87e133cf038_0",
                "is_ignored": false,
                "lines": "  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\"",
                        "end": {
                            "col": 122,
                            "line": 121,
                            "offset": 6704
                        },
                        "start": {
                            "col": 8,
                            "line": 121,
                            "offset": 6590
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 3,
                "line": 121,
                "offset": 6585
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 190,
                "offset": 8933
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "fb59732466ce55b7fe413fd19499942e789e842df381fad9f2ae280db89b0ca88074c3446398adfb39462ddd1427d45153734230cd6fb24b92bcf7a1f435266a_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783836274&amp;cv=9&amp;fst=1729783836274&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=3&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2F&amp;tiba=Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\"",
                        "end": {
                            "col": 89,
                            "line": 189,
                            "offset": 8917
                        },
                        "start": {
                            "col": 12,
                            "line": 189,
                            "offset": 8840
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 5,
                "line": 189,
                "offset": 8833
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 645,
                "line": 190,
                "offset": 9564
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "b9897165a21a0fed050965644e3bc439123ab93c5b4721eb33424fac71582145356aa15a4db205f8e685c192a843e825d811795eb7f3c7cb5f73980b55a130b1_0",
                "is_ignored": false,
                "lines": "    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783836274&amp;cv=9&amp;fst=1729783836274&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=3&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2F&amp;tiba=Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783836274&amp;cv=9&amp;fst=1729783836274&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=3&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2F&amp;tiba=Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 635,
                            "line": 190,
                            "offset": 9554
                        },
                        "start": {
                            "col": 21,
                            "line": 190,
                            "offset": 8940
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 14,
                "line": 190,
                "offset": 8933
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 642,
                "line": 207,
                "offset": 10798
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "43b063ab93f113b62bbf79a4f55630f667bfe095ef5079000348be75cf2980ba89ed0163e4fb133f0c14ec8548cffcacdc10731565fa3dd4719c06a804cf212f_0",
                "is_ignored": false,
                "lines": "<script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783836297&amp;cv=11&amp;fst=1729783836297&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></body></html>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783836297&amp;cv=11&amp;fst=1729783836297&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 632,
                            "line": 207,
                            "offset": 10788
                        },
                        "start": {
                            "col": 8,
                            "line": 207,
                            "offset": 10164
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/index/main/index.html",
            "start": {
                "col": 1,
                "line": 207,
                "offset": 10157
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3d30ea766ac76f81bd344a42a4b52544c4973af6b7a08670817e8df706ae3f7f6a0dc86c568e518c52d559d2840401130b0bc4f1e950e398312e48abb047a204_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3d30ea766ac76f81bd344a42a4b52544c4973af6b7a08670817e8df706ae3f7f6a0dc86c568e518c52d559d2840401130b0bc4f1e950e398312e48abb047a204_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3d30ea766ac76f81bd344a42a4b52544c4973af6b7a08670817e8df706ae3f7f6a0dc86c568e518c52d559d2840401130b0bc4f1e950e398312e48abb047a204_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "569aa415c8ad90daf73f3b8ade675add57e65df016d19a4eace7b62437d0ffe4e4e582648a9ecf98a033260e7b0e45c262df0f0158550d528ece56cfd5b2feb9_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3d30ea766ac76f81bd344a42a4b52544c4973af6b7a08670817e8df706ae3f7f6a0dc86c568e518c52d559d2840401130b0bc4f1e950e398312e48abb047a204_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
            "end": {
                "col": 158,
                "line": 3,
                "offset": 886
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "32aceafb2ec85d84f5d3ead5bffe578dce1a1ff98098e66ed7b423e9e0cad4c6159508328738b784e0bac6c94e603bea1a595280ef9d894f4cce627af5a13046_0",
                "is_ignored": false,
                "lines": "function x(a,b,c){if(b)a:{var d=a.split(\".\");a=d.length===1;var e=d[0],f;!a&&e in q?f=q:f=fa;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in f))break a;f=f[g]}d=d[d.length-1];c=ha&&c===\"es6\"?f[d]:null;b=b(c);b!=null&&(a?da(q,d,{configurable:!0,writable:!0,value:b}):b!==c&&(la[d]===void 0&&(a=Math.random()*1E9>>>0,la[d]=ha?fa.Symbol(d):\"$jscp$\"+a+\"$\"+d),da(f,la[d],{configurable:!0,writable:!0,value:b})))}}",
                "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13373,
                            "rule_id": "QrUpbJ",
                            "rv_id": 834148,
                            "url": "https://semgrep.dev/playground/r/GxTDERG/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                            "version_id": "GxTDERG"
                        }
                    },
                    "shortlink": "https://sg.run/w1DB",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "typescript"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$A": {
                        "abstract_content": "g",
                        "end": {
                            "col": 157,
                            "line": 3,
                            "offset": 885
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "d[e]",
                            "svalue_end": {
                                "col": 130,
                                "line": 3,
                                "offset": 858
                            },
                            "svalue_start": {
                                "col": 126,
                                "line": 3,
                                "offset": 854
                            }
                        },
                        "start": {
                            "col": 156,
                            "line": 3,
                            "offset": 884
                        }
                    },
                    "$SMTH": {
                        "abstract_content": "f",
                        "end": {
                            "col": 153,
                            "line": 3,
                            "offset": 881
                        },
                        "start": {
                            "col": 152,
                            "line": 3,
                            "offset": 880
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
            "start": {
                "col": 152,
                "line": 3,
                "offset": 880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 134,
                "line": 34,
                "offset": 14293
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 134,
                                    "line": 34,
                                    "offset": 14293
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 97,
                                    "line": 34,
                                    "offset": 14256
                                }
                            },
                            "new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "08b2f9eb0d0dd9e9083ceed8895623909e4a7572810f04d6d6d0e08cefc977f2b9a711813b34117932463a3dceca579e3114a1d3667303af8a9dd959677d0277_0",
                "is_ignored": false,
                "lines": "function I(a,b,c){var d=J;if(c?d.g.hasOwnProperty(c)&&d.g[c]==\"\":1){var e;e=(e=Ob())?(e=e.match(new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")))?e[0]:null:null;if(e)a=e;else a:{if(!yb()&&!xb()&&(e=Math.random(),e<b)){e=tb();a=a[Math.floor(e*a.length)];break a}a=null}a&&a!=\"\"&&(c?d.g.hasOwnProperty(c)&&(d.g[c]=a):d.M[a]=!0)}}function M(a){var b=J;return b.g.hasOwnProperty(a)?b.g[a]:\"\"}function Pb(){var a=J,b=[];ub(a.M,function(c,d){b.push(d)});ub(a.g,function(c){c!=\"\"&&b.push(c)});return b};var Qb={aa:2,ka:13,ia:14,ea:16,ca:17,ba:18,Z:19,ma:20,la:21,Y:22},J=null;function Rb(){return!!J&&(M(20)==\"466465926\"||M(20)==\"466465925\")}function Sb(){return!!J&&M(16)==\"592230571\"}function Tb(){return!!J&&(M(22)==\"512247839\"||M(22)==\"512247838\")};function Ub(a){var b=b===void 0?B:b;var c,d;return((c=b.performance)==null?void 0:(d=c.timing)==null?void 0:d[a])||0};function Vb(){var a=Wb,b=\"J\";if(a.J&&a.hasOwnProperty(b))return a.J;b=new a;return a.J=b};var Xb={fa:0,V:1,ga:2,X:3,W:4};function Wb(){this.g={}}function Yb(a,b,c){typeof c===\"number\"&&c>0&&(a.g[b]=Math.round(c))}function Zb(a){var b=Vb();var c=c===void 0?B:c;c=c.performance;Yb(b,a,c&&c.now?c.now():null)}function $b(){function a(){return Yb(b,0,Ub(\"loadEventStart\")-Ub(\"navigationStart\"))}var b=Vb();Ub(\"loadEventStart\")!=0?a():window.addEventListener(\"load\",a)}function ac(){var a=Vb();return u(Object,\"values\").call(Object,Xb).map(function(b){return[b,a.g[b]||0]})};var bc=H(\"false\");var cc={};function dc(a){cc.TAGGING=cc.TAGGING||[];cc.TAGGING[a]=!0};var ec=[];function N(a){return ec[a]===void 0?!1:ec[a]};function fc(){}function gc(a){return typeof a===\"function\"}function hc(a){return typeof a===\"string\"}function ic(a,b){if(a&&Array.isArray(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]}function jc(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])};function kc(a){a=lc(a);return Ja(a)}function lc(a){return a===null?\"null\":a===void 0?\"undefined\":a};var O=window,P=document,mc=navigator,nc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},oc={onload:1,src:1,width:1,height:1,style:1};function pc(a,b,c){b&&jc(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 13,
                            "line": 34,
                            "offset": 14172
                        },
                        "start": {
                            "col": 12,
                            "line": 34,
                            "offset": 14171
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
            "start": {
                "col": 97,
                "line": 34,
                "offset": 14256
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 1331,
                "line": 39,
                "offset": 19511
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1331,
                                    "line": 39,
                                    "offset": 19511
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 1267,
                                    "line": 39,
                                    "offset": 19447
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "08b2f9eb0d0dd9e9083ceed8895623909e4a7572810f04d6d6d0e08cefc977f2b9a711813b34117932463a3dceca579e3114a1d3667303af8a9dd959677d0277_1",
                "is_ignored": false,
                "lines": "3)<<4|l>>4];l=a[(l&15)<<2|h>>6];h=a[h&63];c[e++]=g+k+l+h}g=0;h=d;switch(b.length-f){case 2:g=b[f+1],h=a[(g&15)<<2]||d;case 1:b=b[f],c[e]=a[b>>2]+a[(b&3)<<4|g>>4]+h+d}return c.join(\"\")};function Ac(a,b,c,d,e,f){var g=pb(c,\"fmt\");if(d){var h=pb(c,\"random\"),k=pb(c,\"label\")||\"\";if(!h)return!1;h=zc(decodeURIComponent(k.replace(/\\+/g,\" \"))+\":\"+decodeURIComponent(h.replace(/\\+/g,\" \")));if(!vc(a,h,d))return!1}g&&Number(g)!==4&&(c=rb(c,\"rfmt\",g));c=rb(c,\"fmt\",4);qc(c,function(){a.google_noFurtherRedirects&&d&&(a.google_noFurtherRedirects=null,d())},e,f,b.getElementsByTagName(\"script\")[0].parentElement||void 0);return!0};var Bc={},Cc=(Bc.k={G:/^[\\w-]+$/},Bc.b={G:/^[\\w-]+$/,K:!0},Bc.i={G:/^[1-9]\\d*$/},Bc.u={G:/^[1-9]\\d*$/},Bc);var Dc={},Gc=(Dc[5]={P:{2:Ec},H:[\"k\",\"i\",\"b\",\"u\"]},Dc[4]={P:{2:Ec,GCL:Fc},H:[\"k\",\"i\",\"b\"]},Dc);function Ec(a,b){var c=a.split(\".\");if(c.length===3&&(a={},b=Gc[b])){b=b.H;c=z(c[2].split(\"$\"));for(var d=c.next();!d.done;d=c.next()){d=d.value;var e=d[0];if(b.indexOf(e)!==-1)try{var f=decodeURIComponent(d.substring(1)),g=Cc[e];g&&(g.K?(a[e]=a[e]||[],a[e].push(f)):a[e]=f)}catch(h){}}return a}}function Fc(a){a=a.split(\".\");a.shift();var b=a.shift(),c=a.shift(),d={};return d.k=c,d.i=b,d.b=a,d};function Hc(a){var b=[],c=P.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({L:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(f,g){return g.timestamp-f.timestamp});return b}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 1232,
                            "line": 39,
                            "offset": 19412
                        },
                        "start": {
                            "col": 1231,
                            "line": 39,
                            "offset": 19411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
            "start": {
                "col": 1267,
                "line": 39,
                "offset": 19447
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 372,
                "line": 79,
                "offset": 38083
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "b",
                            "location": {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 372,
                                    "line": 79,
                                    "offset": 38083
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 343,
                                    "line": 79,
                                    "offset": 38054
                                }
                            },
                            "new RegExp(\";\"+b+\"=([^;?]+)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            },
                            "b"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "2866c6656d1f1f0fa411c354c2b4ca18f6867cfaea7cd1f333f56fe4a790353edc1b2836a31e56d0a5d9a1e73bc7bbabd9789f486893ae1e6825d8c07ed88dcf_0",
                "is_ignored": false,
                "lines": "function $d(a,b,c,d){for(var e=U(S())?Ic(\"_gac_gb\",!0):{},f=[],g=!1,h=z(u(Object,\"keys\").call(Object,e)),k=h.next();!k.done;k=h.next()){k=k.value;var l=Rd(\"_gac_gb_\"+k,b,c,d);g=g||l.length!==0&&l.some(function(m){return m===1});f.push(k+\":\"+l.join(\",\"))}return{T:g?f.join(\";\"):\"\",S:Zd(a,e,Yd)}}function ae(a,b){return(a=a.location.href.match(new RegExp(\";\"+b+\"=([^;?]+)\")))&&a.length===2&&a[1].match(Vd)?a[1]:void 0}",
                "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "b",
                        "end": {
                            "col": 310,
                            "line": 79,
                            "offset": 38021
                        },
                        "start": {
                            "col": 309,
                            "line": 79,
                            "offset": 38020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
            "start": {
                "col": 343,
                "line": 79,
                "offset": 38054
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 399,
                "line": 117,
                "offset": 57785
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "bf77139a7afa01698180db8cd7e1b2c95f36159b8fe49036fe26b5e44a9b8eba58ad18059d0ff1c66579af42e7e092cf0cce0b9ccdfbc1e0ab8c016d81c36024_0",
                "is_ignored": false,
                "lines": "(function(a,b,c){if(a){Re(a,c,a);try{if(Ge(a)){var d=Ie(a);J&&I([\"375603260\",\"375603261\"],Lb?1:0,19);J&&I([\"512247838\",\"512247839\"],Mb?1:0,22);if(Te(c)==3){var e=\"google_conversion_\"+Math.floor(Math.random()*1E9);Ma(c,Xe({id:e}));We(function(){try{Je(c,d);var f=c.getElementById(e);if(f){var g=kc(Ee(a,b,c,d));if(f.nodeType===1&&/^(script|style)$/i.test(f.tagName))throw Error(\"\");f.innerHTML=Ka(g)}}catch(h){}},c)}else Je(c,d),Ma(c,kc(Ee(a,b,c,d)))}}catch(f){}He(a)}})(window,navigator,document);}).call(this);",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "f",
                        "end": {
                            "col": 383,
                            "line": 117,
                            "offset": 57769
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "c.getElementById(e)",
                            "svalue_end": {
                                "col": 282,
                                "line": 117,
                                "offset": 57668
                            },
                            "svalue_start": {
                                "col": 263,
                                "line": 117,
                                "offset": 57649
                            }
                        },
                        "start": {
                            "col": 382,
                            "line": 117,
                            "offset": 57768
                        }
                    },
                    "$HTML": {
                        "abstract_content": "Ka(g)",
                        "end": {
                            "col": 399,
                            "line": 117,
                            "offset": 57785
                        },
                        "start": {
                            "col": 394,
                            "line": 117,
                            "offset": 57780
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/conversion.js",
            "start": {
                "col": 382,
                "line": 117,
                "offset": 57768
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 125,
                "line": 6,
                "offset": 328
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "582393712f6c0ec690a3e32964867e46abe2d715f032f04d05680ef5d85963fce281006754e58e60e12e911e5538c9447482b878dae6c2b253362f4b54ccb0a0_0",
                "is_ignored": false,
                "lines": "    document.head.innerHTML += '<link rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\" />';",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "document.head",
                        "end": {
                            "col": 18,
                            "line": 6,
                            "offset": 221
                        },
                        "start": {
                            "col": 5,
                            "line": 6,
                            "offset": 208
                        }
                    },
                    "$HTML": {
                        "abstract_content": "document.head.innerHTML+='<link rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\" />'",
                        "end": {
                            "col": 124,
                            "line": 6,
                            "offset": 327
                        },
                        "start": {
                            "col": 5,
                            "line": 6,
                            "offset": 208
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/gumroad.js",
            "start": {
                "col": 5,
                "line": 6,
                "offset": 208
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 74,
                "line": 16,
                "offset": 1108
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7fb4b9dd870d83a9d35061489d90e0bc2c194604e5ad7def0839a118d51180bdb582e0b1c754b71f3d558f22fa0e0557f30a2a4e9f295a4fe89c3db71eb8afc9_0",
                "is_ignored": false,
                "lines": "    <link href=\"https://www.scrapethissite.com/lessons/\" rel=\"canonical\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://www.scrapethissite.com/lessons/\" rel=\"canonical\"",
                        "end": {
                            "col": 73,
                            "line": 16,
                            "offset": 1107
                        },
                        "start": {
                            "col": 10,
                            "line": 16,
                            "offset": 1044
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 5,
                "line": 16,
                "offset": 1039
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1066,
                "line": 19,
                "offset": 2217
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "071f9e385f1fe2ea7416a062a5a4d75c1aa431bbd46aa4cbcaee08c9a251173824db5e09653a730a035081069c2d9ce7a1ab3b3968342305f66a6d5d334538e3_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://js.driftt.com/include/1729784100000/6nmy7z65gsxc.js\"></script><script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"",
                        "end": {
                            "col": 1056,
                            "line": 19,
                            "offset": 2207
                        },
                        "start": {
                            "col": 144,
                            "line": 19,
                            "offset": 1295
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 137,
                "line": 19,
                "offset": 1288
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1145,
                "line": 19,
                "offset": 2296
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0b583c2b4c5fff5628c5ba56c57e0f50b9deb6f34526563ceb886c174de51a2c65b28b73a4aee0ddea5353b5a5e8f1deafea5ab2525638456633f6a79f1b4116_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://js.driftt.com/include/1729784100000/6nmy7z65gsxc.js\"></script><script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"",
                        "end": {
                            "col": 1135,
                            "line": 19,
                            "offset": 2286
                        },
                        "start": {
                            "col": 1073,
                            "line": 19,
                            "offset": 2224
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 1066,
                "line": 19,
                "offset": 2217
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1338,
                "line": 19,
                "offset": 2489
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "00b9de782a1a40bc0fef0c28f86145ae78ede87efb0806f6a0134b6a6eafd524851f13d072e6f950517bc20077feee87709cb6a456daf1526c6cdd3601e9f4c7_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\" async=\"\" src=\"https://js.driftt.com/include/1729784100000/6nmy7z65gsxc.js\"></script><script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://js.driftt.com/include/1729784100000/6nmy7z65gsxc.js\"",
                        "end": {
                            "col": 1328,
                            "line": 19,
                            "offset": 2479
                        },
                        "start": {
                            "col": 1230,
                            "line": 19,
                            "offset": 2381
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 1223,
                "line": 19,
                "offset": 2374
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 116,
                "line": 324,
                "offset": 10390
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "48baae1a7434c5e1d4cc80e5dbc941ed4db482d083c83258d3aa36ca6f7ed712282f36e2daa1d5295ba026763c2c240d92d164b035ed59c83df3d14d278e9932_0",
                "is_ignored": false,
                "lines": "</style><script src=\"https://assets.gumroad.com/packs/js/overlay-f8f9015a9aabefa09736.js\" charset=\"utf-8\"></script><link rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\"><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850477&amp;cv=9&amp;fst=1729783850477&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465925%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=5&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850493&amp;cv=11&amp;fst=1729783850493&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></head>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://assets.gumroad.com/packs/js/overlay-f8f9015a9aabefa09736.js\" charset=\"utf-8\"",
                        "end": {
                            "col": 106,
                            "line": 324,
                            "offset": 10380
                        },
                        "start": {
                            "col": 16,
                            "line": 324,
                            "offset": 10290
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 9,
                "line": 324,
                "offset": 10283
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 204,
                "line": 324,
                "offset": 10478
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0d35bed368f917748189ba31e817e58408cebfc92840d27b60952242b292589a3ded021cd8f90cb3f4b75594be3ec65d6d3111e0b2a2d333fe02d4569e328738_0",
                "is_ignored": false,
                "lines": "</style><script src=\"https://assets.gumroad.com/packs/js/overlay-f8f9015a9aabefa09736.js\" charset=\"utf-8\"></script><link rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\"><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850477&amp;cv=9&amp;fst=1729783850477&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465925%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=5&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850493&amp;cv=11&amp;fst=1729783850493&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></head>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\"",
                        "end": {
                            "col": 203,
                            "line": 324,
                            "offset": 10477
                        },
                        "start": {
                            "col": 121,
                            "line": 324,
                            "offset": 10395
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 116,
                "line": 324,
                "offset": 10390
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 873,
                "line": 324,
                "offset": 11147
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "77d6953258a7a13d8ef38acf386055724092b062adaed80f7f10d1474a4c9c1c1e3ce01ab32244a7cc1ba9245a24be50f5410b65ec9f2f6bebe78db1da909bcd_0",
                "is_ignored": false,
                "lines": "</style><script src=\"https://assets.gumroad.com/packs/js/overlay-f8f9015a9aabefa09736.js\" charset=\"utf-8\"></script><link rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\"><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850477&amp;cv=9&amp;fst=1729783850477&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465925%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=5&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850493&amp;cv=11&amp;fst=1729783850493&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></head>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850477&amp;cv=9&amp;fst=1729783850477&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465925%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=5&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 863,
                            "line": 324,
                            "offset": 11137
                        },
                        "start": {
                            "col": 211,
                            "line": 324,
                            "offset": 10485
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 204,
                "line": 324,
                "offset": 10478
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1552,
                "line": 324,
                "offset": 11826
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "f0fa95bee48be8b532da2a185a744df4197ba3380d67bcec55a57d0a7a8c1d8b87691dc7a6b643ee90415d67068622de81caac9f616ab3b5c42423d23f2ada3c_0",
                "is_ignored": false,
                "lines": "</style><script src=\"https://assets.gumroad.com/packs/js/overlay-f8f9015a9aabefa09736.js\" charset=\"utf-8\"></script><link rel=\"stylesheet\" href=\"https://assets.gumroad.com/packs/css/overlay-63c6c0f7.css\"><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850477&amp;cv=9&amp;fst=1729783850477&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603260%2C466465925%2C512247838&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=5&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850493&amp;cv=11&amp;fst=1729783850493&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></head>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783850493&amp;cv=11&amp;fst=1729783850493&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flessons%2Fsign-up%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Sign%20Up%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 1542,
                            "line": 324,
                            "offset": 11816
                        },
                        "start": {
                            "col": 880,
                            "line": 324,
                            "offset": 11154
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 873,
                "line": 324,
                "offset": 11147
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 92,
                "line": 715,
                "offset": 30973
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7835b166af47b069c3bbd50aa33b83b391d894aaac5379abde004deac27444cc264a9c7663437a1b2a091e69e5fe0433f6c649bd775247807d056b1db04c5af0_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"",
                        "end": {
                            "col": 82,
                            "line": 715,
                            "offset": 30963
                        },
                        "start": {
                            "col": 10,
                            "line": 715,
                            "offset": 30891
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 3,
                "line": 715,
                "offset": 30884
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 137,
                "line": 720,
                "offset": 31398
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "8feb90bf43b7cb9d5b5baa5e66044c0d07ec26b049ec56404c98f6dff8957683e80bb017413157c5f3cca80e284b9c8b3b16e1ac503f6dc1a0f9d56d7c382836_0",
                "is_ignored": false,
                "lines": "    <script src=\"https://gumroad.com/js/gumroad.js\" data-styles-url=\"https://assets.gumroad.com/packs/css/design-638830f4.css\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://gumroad.com/js/gumroad.js\" data-styles-url=\"https://assets.gumroad.com/packs/css/design-638830f4.css\"",
                        "end": {
                            "col": 127,
                            "line": 720,
                            "offset": 31388
                        },
                        "start": {
                            "col": 12,
                            "line": 720,
                            "offset": 31273
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 5,
                "line": 720,
                "offset": 31266
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 99,
                "line": 745,
                "offset": 32153
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "916f2198a2a9fb815721fb1689f23604ddc8d993f4d5ff61ded239398392a2daf99b083fa69d4492f6d3c42efe931a699e64b9849a63a6f443c71f9963e67a92_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 745,
                            "offset": 32143
                        },
                        "start": {
                            "col": 10,
                            "line": 745,
                            "offset": 32064
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 3,
                "line": 745,
                "offset": 32057
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 123,
                "line": 746,
                "offset": 32277
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9afe47bc5c62c1aeff0986313e04360dabf14e6c135741bf7393f0dc25c2e6788059afa00a195b8df4ba4f48194e7a1a411cd213d9b61e201ba204fb2ea567d5_0",
                "is_ignored": false,
                "lines": "  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\"",
                        "end": {
                            "col": 122,
                            "line": 746,
                            "offset": 32276
                        },
                        "start": {
                            "col": 8,
                            "line": 746,
                            "offset": 32162
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 3,
                "line": 746,
                "offset": 32157
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 815,
                "offset": 34505
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "63b8b3a4970cb9c2b84883f46dc180aad4972b235d5643127d5dc36ad287be1d87f4152abab48ec3e3a9ea23a23dbb6a58b3f67661d7e64493cb46b414317fa7_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n    </script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\"",
                        "end": {
                            "col": 89,
                            "line": 814,
                            "offset": 34489
                        },
                        "start": {
                            "col": 12,
                            "line": 814,
                            "offset": 34412
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/lessons.html",
            "start": {
                "col": 5,
                "line": 814,
                "offset": 34405
            }
        },
        {
            "check_id": "javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
            "end": {
                "col": 5436,
                "line": 1,
                "offset": 5435
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "7a8e71a4c6b68d98cc552a100a81996ef8d31fbea22cd08cf268120eaf61064a609f31c7af338ba12e6d03ed80a6185be5f42f67428a54797f50d3da5006921b_0",
                "is_ignored": false,
                "lines": "(()=>{\"use strict\";(()=>{var e=(e=>(e[e.String=0]=\"String\",e[e.Number=1]=\"Number\",e[e.Boolean=2]=\"Boolean\",e[e.Unknown=3]=\"Unknown\",e[e.Bigint=4]=\"Bigint\",e[e.Object=5]=\"Object\",e[e.Array=6]=\"Array\",e[e.Tuple=7]=\"Tuple\",e[e.Literal=8]=\"Literal\",e[e.Union=9]=\"Union\",e[e.Intersection=10]=\"Intersection\",e[e.Date=11]=\"Date\",e[e.Reference=12]=\"Reference\",e))(e||{}),t=(e=>(e[e.Property=0]=\"Property\",e[e.IndexSignature=1]=\"IndexSignature\",e))(t||{}),n=(e=>(e[e.Optional=1]=\"Optional\",e[e.Variable=2]=\"Variable\",e))(n||{});class r extends Error{}function a(e,t,n){return new r(`Expected ${e} to be ${t}, got ${n}`)}function o(o,s){if(null==s)throw new Error(\"Please ensure that the ts-safe-cast transformer is run.\");return function o(i,c,l){switch(c){case e.String:return\"string\"==typeof i?void 0:a(l,\"a string\",i);case e.Number:return\"number\"==typeof i?void 0:a(l,\"a number\",i);case e.Boolean:return\"boolean\"==typeof i?void 0:a(l,\"a boolean\",i);case e.Unknown:return;case e.Bigint:return\"bigint\"==typeof i?void 0:a(l,\"a bigint\",i);case e.Date:return i instanceof Date?void 0:a(l,\"a date\",i)}switch(c[0]){case e.Object:{if(!i||\"object\"!=typeof i)return a(l,\"an object\",i);let e=i;const[n,...r]=c;for(const n of r)switch(n[0]){case t.Property:const r=n[1],s=`${l}.${r}`;if(!(r in e)){if(n[3])break;return a(s,\"defined\",\"undefined\")}const i=o(e[r],n[2],s);if(i)return i;break;case t.IndexSignature:for(const t in e){const r=o(e[t],n[1],`${l}.${t}`);if(r)return r}}return}case e.Array:if(!Array.isArray(i))return a(l,\"an array\",i);for(let e=0;e<i.length;++e){const t=o(i[e],c[1],`${l}.${e}`);if(t)return t}return;case e.Tuple:{const[e,...t]=c;if(!Array.isArray(i))return a(l,\"a tuple\",i);let r=0,s=0;for(const[e,a]of t)if(a)for(;s<i.length;){const t=o(i[s],e,`${l}.${s}`);if(t||++s,t||a===n.Optional)break}else for(;;){const t=o(i[r],e,`${l}.${r}`);if(++r,!t){r>=s&&(s=r);break}if(r>s)return t}return s<i.length?a(l,\"a tuple\",i):void 0}case e.Literal:return i===c[1]?void 0:a(l,`${c[1]}`,i);case e.Union:{const[e,...t]=c,n=[];for(const e of t){const t=o(i,e,l);if(!t)return;n.push(t)}return new r(`Expected ${l} to be a union, but no branches matched: ${n.map((e=>`\\n\\t\u2022 ${e}`)).join(\"\")}`)}case e.Intersection:{const[e,...t]=c;for(const e of t){const t=o(i,e,l);if(t)return t}return}case e.Reference:{const[e,...t]=c;let n=s;for(let e=0;e<t.length;++e)n=n[t[e]];return o(i,n,l)}}}(o,s,\"root\")}function s(e,t){return!o(e,t)}function i(e,t){const n=o(e,t);if(n)throw n;return e}const c=(e,t)=>e.host.endsWith(i(\"gumroad.com\",0))||\"gum.co\"===e.host||t&&e.host.endsWith(t),l=document.querySelector(\"script[src*='/js/gumroad.js']\"),d=l?new URL(l.src).host:void 0,u=document.createElement(\"div\");u.className=\"overlay\",u.style.display=\"none\";const f=document.createElement(\"button\");f.classList.add(\"close-button\"),f.innerHTML='<span class=\"icon icon-x\"></span>',u.appendChild(f);const p=document.createElement(\"iframe\");u.appendChild(p);const h=document.createElement(\"div\");h.setAttribute(\"role\",\"progressbar\"),h.style.display=\"none\";const m=e=>{if(e.closest(\"[data-gumroad-ignore='true']\")||e.closest(\".gumroad-product-embed\"))return;const t=((e,t)=>{var n,r;try{const a=new URL(e);if(!c(a,t))return;const o=new URLSearchParams(window.location.search),s=null!=(n=o.get(\"affiliate_id\"))?n:o.get(\"a\");if(s&&a.searchParams.set(\"affiliate_id\",s),a.searchParams.set(\"referrer\",window.location.href),\"gum.co\"===a.host)return a;const i=/\\/a\\/(?<affiliateId>.+)\\/(?<permalink>.+)/u.exec(a.pathname);return(null==(r=null==i?void 0:i.groups)?void 0:r.permalink)&&i.groups.affiliateId&&(a.pathname=`/l/${i.groups.permalink}`,a.searchParams.set(\"affiliate_id\",i.groups.affiliateId)),a.pathname.startsWith(\"/l/\")?a:null}catch{return null}})(e.href,d);if(!t)return;\"true\"===e.dataset.gumroadOverlayCheckout&&t.searchParams.set(\"wanted\",\"true\"),\"true\"===t.searchParams.get(\"wanted\")?e.href=t.toString():(t.searchParams.set(\"overlay\",\"true\"),e.addEventListener(\"click\",(e=>{e.preventDefault(),h.style.display=\"\",p.src=t.toString()})));const n=document.createElement(\"span\");n.className=\"logo-full\",e.appendChild(n)},y=e=>e.querySelectorAll(\"a\").forEach(m);(e=>{if(\"complete\"===document.readyState)return e();window.addEventListener(\"load\",e)})((()=>{var e;const t=document.createElement(\"div\");t.style.zIndex=\"999999\",t.style.position=\"absolute\";const n=t.attachShadow({mode:\"open\"}),r=document.createElement(\"link\");r.setAttribute(\"rel\",\"stylesheet\"),r.setAttribute(\"href\",null!=(e=null==l?void 0:l.dataset.stylesUrl)?e:\"\"),r.setAttribute(\"crossorigin\",\"anonymous\"),n.appendChild(r);const a=document.createElement(\"div\");a.className=\"widget\",n.appendChild(a),a.appendChild(h),a.appendChild(u),document.body.appendChild(t),y(document),new MutationObserver((e=>{for(const t of e)t.addedNodes.forEach((e=>{e instanceof HTMLAnchorElement?m(e):e instanceof Element&&y(e)}))})).observe(document,{subtree:!0,childList:!0})})),u.addEventListener(\"click\",(e=>{e.target!==p&&(u.style.display=\"none\",document.body.style.overflow=\"\")})),window.addEventListener(\"message\",(e=>{const t=new URL(e.origin);e.source===p.contentWindow&&c(t,d)&&(s(e.data,[5,[0,\"type\",[8,\"loaded\"]]])?(h.style.display=\"none\",document.body.style.overflow=\"hidden\",u.style.display=\"\"):s(e.data,[5,[0,\"type\",[8,\"height\"]],[0,\"height\",1]])?p.style.height=`${e.data.height}px`:s(e.data,[5,[0,\"type\",[8,\"translations\"]],[0,\"translations\",[5,[1,0]]]])&&(f.ariaLabel=e.data.translations.close||\"\"))}))})()})();",
                "message": "No validation of origin is done by the addEventListener API. It may be possible to exploit this flaw to perform Cross Origin attacks such as Cross-Site Scripting(XSS).",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-345: Insufficient Verification of Data Authenticity"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9241,
                            "rule_id": "BYUN0X",
                            "rv_id": 834051,
                            "url": "https://semgrep.dev/playground/r/DkTG0yE/javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
                            "version_id": "DkTG0yE"
                        }
                    },
                    "shortlink": "https://sg.run/gL9x",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insufficient-postmessage-origin-validation.insufficient-postmessage-origin-validation",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Improper Authentication"
                    ]
                },
                "metavars": {
                    "$FUNC": {
                        "abstract_content": "e=>{const t new URL(e.origin)e.source===p.contentWindow&&c(t d)&&s(e.data[5[0\"type\"[8\"loaded\"]]])h.style.display=\"none\"document.body.style.overflow=\"hidden\"u.style.display=\"\"s(e.data[5[0\"type\"[8\"height\"]][0\"height\"1]])p.style.height=`e.data.height px s(e.data[5[0\"type\"[8\"translations\"]][0\"translations\"[5[1 0]]]])&&f.ariaLabel=e.data.translations.close||\"\"}",
                        "end": {
                            "col": 5435,
                            "line": 1,
                            "offset": 5434
                        },
                        "start": {
                            "col": 5038,
                            "line": 1,
                            "offset": 5037
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/lessons/main/overlay-f8f9015a9aabefa09736.js",
            "start": {
                "col": 5004,
                "line": 1,
                "offset": 5003
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "2cff303e89804f4a8863f6ac57227241b05f52fcabffd6af778f88d2fbd5a3ab25e58640457379111a969ad5d6b4d443495e7ed316633bf1de7cc7d385978509_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "2cff303e89804f4a8863f6ac57227241b05f52fcabffd6af778f88d2fbd5a3ab25e58640457379111a969ad5d6b4d443495e7ed316633bf1de7cc7d385978509_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "2cff303e89804f4a8863f6ac57227241b05f52fcabffd6af778f88d2fbd5a3ab25e58640457379111a969ad5d6b4d443495e7ed316633bf1de7cc7d385978509_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4a3fecedcfb3ab06f3839d1c89db3d6fe4b0c67e71b446305f9987421d2cfa6a3cf89876957e5e635408c7c9767b3334621236a22a4af9a67e43733828da3ffc_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "2cff303e89804f4a8863f6ac57227241b05f52fcabffd6af778f88d2fbd5a3ab25e58640457379111a969ad5d6b4d443495e7ed316633bf1de7cc7d385978509_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
            "end": {
                "col": 158,
                "line": 3,
                "offset": 886
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "30df617f403ff2439536c70110ebf4afcf87324c9d38237b3a0cd6142eb7f8f3a4719bbdd5aa30f0983a8506219423a6d3c5246f25314568281c1ce16a3136d0_0",
                "is_ignored": false,
                "lines": "function x(a,b,c){if(b)a:{var d=a.split(\".\");a=d.length===1;var e=d[0],f;!a&&e in q?f=q:f=fa;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in f))break a;f=f[g]}d=d[d.length-1];c=ha&&c===\"es6\"?f[d]:null;b=b(c);b!=null&&(a?da(q,d,{configurable:!0,writable:!0,value:b}):b!==c&&(la[d]===void 0&&(a=Math.random()*1E9>>>0,la[d]=ha?fa.Symbol(d):\"$jscp$\"+a+\"$\"+d),da(f,la[d],{configurable:!0,writable:!0,value:b})))}}",
                "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13373,
                            "rule_id": "QrUpbJ",
                            "rv_id": 834148,
                            "url": "https://semgrep.dev/playground/r/GxTDERG/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                            "version_id": "GxTDERG"
                        }
                    },
                    "shortlink": "https://sg.run/w1DB",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "typescript"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$A": {
                        "abstract_content": "g",
                        "end": {
                            "col": 157,
                            "line": 3,
                            "offset": 885
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "d[e]",
                            "svalue_end": {
                                "col": 130,
                                "line": 3,
                                "offset": 858
                            },
                            "svalue_start": {
                                "col": 126,
                                "line": 3,
                                "offset": 854
                            }
                        },
                        "start": {
                            "col": 156,
                            "line": 3,
                            "offset": 884
                        }
                    },
                    "$SMTH": {
                        "abstract_content": "f",
                        "end": {
                            "col": 153,
                            "line": 3,
                            "offset": 881
                        },
                        "start": {
                            "col": 152,
                            "line": 3,
                            "offset": 880
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
            "start": {
                "col": 152,
                "line": 3,
                "offset": 880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 134,
                "line": 34,
                "offset": 14293
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 134,
                                    "line": 34,
                                    "offset": 14293
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 97,
                                    "line": 34,
                                    "offset": 14256
                                }
                            },
                            "new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "dbaa68e90c6161efcc4f398927d83ee030f2f9626bcbfeb9b6e2c1017da43511e758c2c633c1a6d720292a704bcd7c55d42ff05746d3f0c71e0d3478f1076aef_0",
                "is_ignored": false,
                "lines": "function I(a,b,c){var d=J;if(c?d.g.hasOwnProperty(c)&&d.g[c]==\"\":1){var e;e=(e=Ob())?(e=e.match(new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")))?e[0]:null:null;if(e)a=e;else a:{if(!yb()&&!xb()&&(e=Math.random(),e<b)){e=tb();a=a[Math.floor(e*a.length)];break a}a=null}a&&a!=\"\"&&(c?d.g.hasOwnProperty(c)&&(d.g[c]=a):d.M[a]=!0)}}function M(a){var b=J;return b.g.hasOwnProperty(a)?b.g[a]:\"\"}function Pb(){var a=J,b=[];ub(a.M,function(c,d){b.push(d)});ub(a.g,function(c){c!=\"\"&&b.push(c)});return b};var Qb={aa:2,ka:13,ia:14,ea:16,ca:17,ba:18,Z:19,ma:20,la:21,Y:22},J=null;function Rb(){return!!J&&(M(20)==\"466465926\"||M(20)==\"466465925\")}function Sb(){return!!J&&M(16)==\"592230571\"}function Tb(){return!!J&&(M(22)==\"512247839\"||M(22)==\"512247838\")};function Ub(a){var b=b===void 0?B:b;var c,d;return((c=b.performance)==null?void 0:(d=c.timing)==null?void 0:d[a])||0};function Vb(){var a=Wb,b=\"J\";if(a.J&&a.hasOwnProperty(b))return a.J;b=new a;return a.J=b};var Xb={fa:0,V:1,ga:2,X:3,W:4};function Wb(){this.g={}}function Yb(a,b,c){typeof c===\"number\"&&c>0&&(a.g[b]=Math.round(c))}function Zb(a){var b=Vb();var c=c===void 0?B:c;c=c.performance;Yb(b,a,c&&c.now?c.now():null)}function $b(){function a(){return Yb(b,0,Ub(\"loadEventStart\")-Ub(\"navigationStart\"))}var b=Vb();Ub(\"loadEventStart\")!=0?a():window.addEventListener(\"load\",a)}function ac(){var a=Vb();return u(Object,\"values\").call(Object,Xb).map(function(b){return[b,a.g[b]||0]})};var bc=H(\"false\");var cc={};function dc(a){cc.TAGGING=cc.TAGGING||[];cc.TAGGING[a]=!0};var ec=[];function N(a){return ec[a]===void 0?!1:ec[a]};function fc(){}function gc(a){return typeof a===\"function\"}function hc(a){return typeof a===\"string\"}function ic(a,b){if(a&&Array.isArray(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]}function jc(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])};function kc(a){a=lc(a);return Ja(a)}function lc(a){return a===null?\"null\":a===void 0?\"undefined\":a};var O=window,P=document,mc=navigator,nc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},oc={onload:1,src:1,width:1,height:1,style:1};function pc(a,b,c){b&&jc(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 13,
                            "line": 34,
                            "offset": 14172
                        },
                        "start": {
                            "col": 12,
                            "line": 34,
                            "offset": 14171
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
            "start": {
                "col": 97,
                "line": 34,
                "offset": 14256
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 1331,
                "line": 39,
                "offset": 19511
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1331,
                                    "line": 39,
                                    "offset": 19511
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 1267,
                                    "line": 39,
                                    "offset": 19447
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "dbaa68e90c6161efcc4f398927d83ee030f2f9626bcbfeb9b6e2c1017da43511e758c2c633c1a6d720292a704bcd7c55d42ff05746d3f0c71e0d3478f1076aef_1",
                "is_ignored": false,
                "lines": "3)<<4|l>>4];l=a[(l&15)<<2|h>>6];h=a[h&63];c[e++]=g+k+l+h}g=0;h=d;switch(b.length-f){case 2:g=b[f+1],h=a[(g&15)<<2]||d;case 1:b=b[f],c[e]=a[b>>2]+a[(b&3)<<4|g>>4]+h+d}return c.join(\"\")};function Ac(a,b,c,d,e,f){var g=pb(c,\"fmt\");if(d){var h=pb(c,\"random\"),k=pb(c,\"label\")||\"\";if(!h)return!1;h=zc(decodeURIComponent(k.replace(/\\+/g,\" \"))+\":\"+decodeURIComponent(h.replace(/\\+/g,\" \")));if(!vc(a,h,d))return!1}g&&Number(g)!==4&&(c=rb(c,\"rfmt\",g));c=rb(c,\"fmt\",4);qc(c,function(){a.google_noFurtherRedirects&&d&&(a.google_noFurtherRedirects=null,d())},e,f,b.getElementsByTagName(\"script\")[0].parentElement||void 0);return!0};var Bc={},Cc=(Bc.k={G:/^[\\w-]+$/},Bc.b={G:/^[\\w-]+$/,K:!0},Bc.i={G:/^[1-9]\\d*$/},Bc.u={G:/^[1-9]\\d*$/},Bc);var Dc={},Gc=(Dc[5]={P:{2:Ec},H:[\"k\",\"i\",\"b\",\"u\"]},Dc[4]={P:{2:Ec,GCL:Fc},H:[\"k\",\"i\",\"b\"]},Dc);function Ec(a,b){var c=a.split(\".\");if(c.length===3&&(a={},b=Gc[b])){b=b.H;c=z(c[2].split(\"$\"));for(var d=c.next();!d.done;d=c.next()){d=d.value;var e=d[0];if(b.indexOf(e)!==-1)try{var f=decodeURIComponent(d.substring(1)),g=Cc[e];g&&(g.K?(a[e]=a[e]||[],a[e].push(f)):a[e]=f)}catch(h){}}return a}}function Fc(a){a=a.split(\".\");a.shift();var b=a.shift(),c=a.shift(),d={};return d.k=c,d.i=b,d.b=a,d};function Hc(a){var b=[],c=P.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({L:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(f,g){return g.timestamp-f.timestamp});return b}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 1232,
                            "line": 39,
                            "offset": 19412
                        },
                        "start": {
                            "col": 1231,
                            "line": 39,
                            "offset": 19411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
            "start": {
                "col": 1267,
                "line": 39,
                "offset": 19447
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 372,
                "line": 79,
                "offset": 38083
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "b",
                            "location": {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 372,
                                    "line": 79,
                                    "offset": 38083
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 343,
                                    "line": 79,
                                    "offset": 38054
                                }
                            },
                            "new RegExp(\";\"+b+\"=([^;?]+)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            },
                            "b"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "64dc071abd227a68059d50852823cc8fefa1f1b0f65ed3412db61d61d7c9404276c9aa171879d362e4c6f87839c4b19a0203ab0322af1bccaa4002cca7730e10_0",
                "is_ignored": false,
                "lines": "function $d(a,b,c,d){for(var e=U(S())?Ic(\"_gac_gb\",!0):{},f=[],g=!1,h=z(u(Object,\"keys\").call(Object,e)),k=h.next();!k.done;k=h.next()){k=k.value;var l=Rd(\"_gac_gb_\"+k,b,c,d);g=g||l.length!==0&&l.some(function(m){return m===1});f.push(k+\":\"+l.join(\",\"))}return{T:g?f.join(\";\"):\"\",S:Zd(a,e,Yd)}}function ae(a,b){return(a=a.location.href.match(new RegExp(\";\"+b+\"=([^;?]+)\")))&&a.length===2&&a[1].match(Vd)?a[1]:void 0}",
                "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "b",
                        "end": {
                            "col": 310,
                            "line": 79,
                            "offset": 38021
                        },
                        "start": {
                            "col": 309,
                            "line": 79,
                            "offset": 38020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
            "start": {
                "col": 343,
                "line": 79,
                "offset": 38054
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 399,
                "line": 117,
                "offset": 57785
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "0c6805cbe27a72d565835b12d2a634e61dae73da744b86aa0db6653153f5a0149252f3ceb6a2e904698d438cbedfb8b1d3467fa713efab5219c2b94feff0ab3d_0",
                "is_ignored": false,
                "lines": "(function(a,b,c){if(a){Re(a,c,a);try{if(Ge(a)){var d=Ie(a);J&&I([\"375603260\",\"375603261\"],Lb?1:0,19);J&&I([\"512247838\",\"512247839\"],Mb?1:0,22);if(Te(c)==3){var e=\"google_conversion_\"+Math.floor(Math.random()*1E9);Ma(c,Xe({id:e}));We(function(){try{Je(c,d);var f=c.getElementById(e);if(f){var g=kc(Ee(a,b,c,d));if(f.nodeType===1&&/^(script|style)$/i.test(f.tagName))throw Error(\"\");f.innerHTML=Ka(g)}}catch(h){}},c)}else Je(c,d),Ma(c,kc(Ee(a,b,c,d)))}}catch(f){}He(a)}})(window,navigator,document);}).call(this);",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "f",
                        "end": {
                            "col": 383,
                            "line": 117,
                            "offset": 57769
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "c.getElementById(e)",
                            "svalue_end": {
                                "col": 282,
                                "line": 117,
                                "offset": 57668
                            },
                            "svalue_start": {
                                "col": 263,
                                "line": 117,
                                "offset": 57649
                            }
                        },
                        "start": {
                            "col": 382,
                            "line": 117,
                            "offset": 57768
                        }
                    },
                    "$HTML": {
                        "abstract_content": "Ka(g)",
                        "end": {
                            "col": 399,
                            "line": 117,
                            "offset": 57785
                        },
                        "start": {
                            "col": 394,
                            "line": 117,
                            "offset": 57780
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/conversion.js",
            "start": {
                "col": 382,
                "line": 117,
                "offset": 57768
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1070,
                "line": 58,
                "offset": 3730
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "8c34af79a6dfa3c426996e2d7c33b192ed693c38a7b89501973403ade8ddb7efad22a1dab63d51f4870649cac439b08c4f3d78053122fdb6e4742ed104cc9815_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"",
                        "end": {
                            "col": 1060,
                            "line": 58,
                            "offset": 3720
                        },
                        "start": {
                            "col": 148,
                            "line": 58,
                            "offset": 2808
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 141,
                "line": 58,
                "offset": 2801
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1149,
                "line": 58,
                "offset": 3809
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "868629c0d6f7f498d0dff30458be0a9e5d21775ea1f65048bda16a3841cbd63be6eda8f28dc3ef961e597c947f51e6ba097e5f75259c58d1fe407612367fc22d_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"",
                        "end": {
                            "col": 1139,
                            "line": 58,
                            "offset": 3799
                        },
                        "start": {
                            "col": 1077,
                            "line": 58,
                            "offset": 3737
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 1070,
                "line": 58,
                "offset": 3730
            }
        },
        {
            "check_id": "python.django.security.django-no-csrf-token.django-no-csrf-token",
            "end": {
                "col": 32,
                "line": 95,
                "offset": 5807
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "352b31d2a5771854e718f27b1ae4f3f786c2b077265a3da5c8be8ab661f60f4aac36dfba0b31ab3a087cc3a74650dd4aa2feb5db8c35e045211b2da9986a6884_0",
                "is_ignored": false,
                "lines": "                        <form class=\"form\" method=\"post\">\n                            <div class=\"form-group\">\n                                <label for=\"email\">Your Email</label>\n                                <input type=\"email\" class=\"form-control\" name=\"email\" id=\"email\" placeholder=\"Email Address\">\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"password\">Your Password</label>\n                                <input type=\"password\" class=\"form-control\" name=\"password\" id=\"password\" placeholder=\"Password\">\n                            </div>\n                            <input type=\"submit\" value=\"Login \u2192\" class=\"btn btn-primary btn-lg pull-right\">\n                            <span class=\"pull-left\">Need an account? <a href=\"/lessons/\">Start learning web scraping today</a>.</span>\n                        </form>",
                "message": "Manually-created forms in django templates should specify a csrf_token to prevent CSRF attacks.",
                "metadata": {
                    "category": "security",
                    "confidence": "MEDIUM",
                    "cwe": "CWE-352: Cross-Site Request Forgery (CSRF)",
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "references": [
                        "https://docs.djangoproject.com/en/4.2/howto/csrf/"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 73471,
                            "rule_id": "PeUyYG",
                            "rv_id": 834427,
                            "url": "https://semgrep.dev/playground/r/yeTNgk0/python.django.security.django-no-csrf-token.django-no-csrf-token",
                            "version_id": "yeTNgk0"
                        }
                    },
                    "shortlink": "https://sg.run/N0Bp",
                    "source": "https://semgrep.dev/r/python.django.security.django-no-csrf-token.django-no-csrf-token",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "django"
                    ],
                    "vulnerability_class": [
                        "Cross-Site Request Forgery (CSRF)"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "post",
                        "end": {
                            "col": 5,
                            "line": 1,
                            "offset": 4
                        },
                        "start": {
                            "col": 1,
                            "line": 1,
                            "offset": 0
                        }
                    },
                    "$METHOD": {
                        "abstract_content": "post",
                        "end": {
                            "col": 56,
                            "line": 84,
                            "offset": 4939
                        },
                        "start": {
                            "col": 52,
                            "line": 84,
                            "offset": 4935
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 25,
                "line": 84,
                "offset": 4908
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 92,
                "line": 115,
                "offset": 6387
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "6a68def2e2c3fdd35890ed036cccb390013f1d97fb8184d7724660906e20602ab1701b4d0d5a34a3e93d4ff479f862a1755af7df4f289971aff3978eecd25682_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"",
                        "end": {
                            "col": 82,
                            "line": 115,
                            "offset": 6377
                        },
                        "start": {
                            "col": 10,
                            "line": 115,
                            "offset": 6305
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 3,
                "line": 115,
                "offset": 6298
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 99,
                "line": 120,
                "offset": 6774
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "5d8e6935fbb70f5fd4a85668dc89959fa778e84e89aa8c2f5802ba50b59bf0cfbdf7f8dda48ec1e99bda9f85c5fbd4c76d840b1139c6c302c97ff0be1ed5ca77_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 120,
                            "offset": 6764
                        },
                        "start": {
                            "col": 10,
                            "line": 120,
                            "offset": 6685
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 3,
                "line": 120,
                "offset": 6678
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 123,
                "line": 121,
                "offset": 6898
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "d3f33c40a3e7c671ade74ae739d3345fa67cb8a1a07bf92d393f70753686448967541395769813dba6e3e92988fe9264e1066d8d49901d919bbe3c693429a854_0",
                "is_ignored": false,
                "lines": "  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\"",
                        "end": {
                            "col": 122,
                            "line": 121,
                            "offset": 6897
                        },
                        "start": {
                            "col": 8,
                            "line": 121,
                            "offset": 6783
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 3,
                "line": 121,
                "offset": 6778
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 190,
                "offset": 9126
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "2577e3fd9f53c9ad43ab07055ec96da0b44d146c6a5943c16066aa08d03c48bf4c66a05d9e590220dbdc6eeaaa54102a714621e42038054953aa7ed03b8d4408_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783879260&amp;cv=9&amp;fst=1729783879260&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=376635471%2C375603260%2C466465925%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=7&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flogin%2F&amp;tiba=Login%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><iframe name=\"google_cookie_match_frame\" title=\"Google cookie match frame\" width=\"1\" height=\"1\" src=\"https://bid.g.doubleclick.net/xbbe/pixel?d=KAE\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" style=\"display:none\" scrolling=\"no\"></iframe>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\"",
                        "end": {
                            "col": 89,
                            "line": 189,
                            "offset": 9110
                        },
                        "start": {
                            "col": 12,
                            "line": 189,
                            "offset": 9033
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 5,
                "line": 189,
                "offset": 9026
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 679,
                "line": 190,
                "offset": 9791
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "d02aa3fac5947951bb23ec0cda2a9aa9f800a8f01f961cd116097013cd9bc6885581fba6c3d3d2e286f1538752443c8a1a6a0e98dafbaacbc95c2b5788308c1f_0",
                "is_ignored": false,
                "lines": "    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783879260&amp;cv=9&amp;fst=1729783879260&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=376635471%2C375603260%2C466465925%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=7&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flogin%2F&amp;tiba=Login%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><iframe name=\"google_cookie_match_frame\" title=\"Google cookie match frame\" width=\"1\" height=\"1\" src=\"https://bid.g.doubleclick.net/xbbe/pixel?d=KAE\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" style=\"display:none\" scrolling=\"no\"></iframe>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783879260&amp;cv=9&amp;fst=1729783879260&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=376635471%2C375603260%2C466465925%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=7&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flogin%2F&amp;tiba=Login%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 669,
                            "line": 190,
                            "offset": 9781
                        },
                        "start": {
                            "col": 21,
                            "line": 190,
                            "offset": 9133
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 14,
                "line": 190,
                "offset": 9126
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 664,
                "line": 207,
                "offset": 11337
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "aef9cb358c7b7abaa3324e5304eed1e3efb51008ceaff7a443eef6165f99c7b7c0a0396b257289d67ff97f18e68f7ecc731eb91b3c15342fa25df903b4361f7c_0",
                "is_ignored": false,
                "lines": "<script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783879276&amp;cv=11&amp;fst=1729783879276&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flogin%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Login%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></body></html>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783879276&amp;cv=11&amp;fst=1729783879276&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Flogin%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Login%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 654,
                            "line": 207,
                            "offset": 11327
                        },
                        "start": {
                            "col": 8,
                            "line": 207,
                            "offset": 10681
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/login/main/login.html",
            "start": {
                "col": 1,
                "line": 207,
                "offset": 10674
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "888ed667660b2c842a186c676b4a56e05bcf8a7a553b43fc3b1d36dfe877e4f26e1ad2e685adf1e518bf9d3fdff1d983f46f17ef4bf46dbdc396430f6532e536_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "888ed667660b2c842a186c676b4a56e05bcf8a7a553b43fc3b1d36dfe877e4f26e1ad2e685adf1e518bf9d3fdff1d983f46f17ef4bf46dbdc396430f6532e536_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "888ed667660b2c842a186c676b4a56e05bcf8a7a553b43fc3b1d36dfe877e4f26e1ad2e685adf1e518bf9d3fdff1d983f46f17ef4bf46dbdc396430f6532e536_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "e1a5b32b7f4b2e328d2e6b605288d68f39eb3e2117fb68eb9c192d8dff08a293224ba71e4f41563fe52ca681eff4ac60f9ff7c25ed2b79b58cf97a837d7b28b6_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "888ed667660b2c842a186c676b4a56e05bcf8a7a553b43fc3b1d36dfe877e4f26e1ad2e685adf1e518bf9d3fdff1d983f46f17ef4bf46dbdc396430f6532e536_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/forms/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3cd24834e1b509be4f1ef3195526590f4c645e2f87d5fcfe2d7af0f315e015a27425e64fd4b443b956407e874072bd47e6624d838b93d9cb0f482fc9f95e7e7b_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3cd24834e1b509be4f1ef3195526590f4c645e2f87d5fcfe2d7af0f315e015a27425e64fd4b443b956407e874072bd47e6624d838b93d9cb0f482fc9f95e7e7b_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3cd24834e1b509be4f1ef3195526590f4c645e2f87d5fcfe2d7af0f315e015a27425e64fd4b443b956407e874072bd47e6624d838b93d9cb0f482fc9f95e7e7b_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c74c84bb6e5dc3ce83d3417c838b3f7a44df7c84f458ee8a89ffb89e8887b447d60b18d0e007b569162dc8207764ca3a3b9cf8479478f631196da67701fff39f_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "3cd24834e1b509be4f1ef3195526590f4c645e2f87d5fcfe2d7af0f315e015a27425e64fd4b443b956407e874072bd47e6624d838b93d9cb0f482fc9f95e7e7b_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
            "end": {
                "col": 158,
                "line": 3,
                "offset": 886
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "366f1a47036afa8943bf9a62440d822a2f4da4c567b667bd0012cc983513f28d7b612c768e0cd6c48ec8b28979b056d4fa7c4bffba4f2e82a1ed499835daa9e3_0",
                "is_ignored": false,
                "lines": "function x(a,b,c){if(b)a:{var d=a.split(\".\");a=d.length===1;var e=d[0],f;!a&&e in q?f=q:f=fa;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in f))break a;f=f[g]}d=d[d.length-1];c=ha&&c===\"es6\"?f[d]:null;b=b(c);b!=null&&(a?da(q,d,{configurable:!0,writable:!0,value:b}):b!==c&&(la[d]===void 0&&(a=Math.random()*1E9>>>0,la[d]=ha?fa.Symbol(d):\"$jscp$\"+a+\"$\"+d),da(f,la[d],{configurable:!0,writable:!0,value:b})))}}",
                "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13373,
                            "rule_id": "QrUpbJ",
                            "rv_id": 834148,
                            "url": "https://semgrep.dev/playground/r/GxTDERG/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                            "version_id": "GxTDERG"
                        }
                    },
                    "shortlink": "https://sg.run/w1DB",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "typescript"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$A": {
                        "abstract_content": "g",
                        "end": {
                            "col": 157,
                            "line": 3,
                            "offset": 885
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "d[e]",
                            "svalue_end": {
                                "col": 130,
                                "line": 3,
                                "offset": 858
                            },
                            "svalue_start": {
                                "col": 126,
                                "line": 3,
                                "offset": 854
                            }
                        },
                        "start": {
                            "col": 156,
                            "line": 3,
                            "offset": 884
                        }
                    },
                    "$SMTH": {
                        "abstract_content": "f",
                        "end": {
                            "col": 153,
                            "line": 3,
                            "offset": 881
                        },
                        "start": {
                            "col": 152,
                            "line": 3,
                            "offset": 880
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
            "start": {
                "col": 152,
                "line": 3,
                "offset": 880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 134,
                "line": 34,
                "offset": 14293
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 134,
                                    "line": 34,
                                    "offset": 14293
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 97,
                                    "line": 34,
                                    "offset": 14256
                                }
                            },
                            "new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "d755750e69e09e2491a4c487859a42e9674e6d395be25ede385f05e3a637d7f6346b892219584abf08a36d1c98ae95a43fc0449696fb3f0c7512c02b43efc5fd_0",
                "is_ignored": false,
                "lines": "function I(a,b,c){var d=J;if(c?d.g.hasOwnProperty(c)&&d.g[c]==\"\":1){var e;e=(e=Ob())?(e=e.match(new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")))?e[0]:null:null;if(e)a=e;else a:{if(!yb()&&!xb()&&(e=Math.random(),e<b)){e=tb();a=a[Math.floor(e*a.length)];break a}a=null}a&&a!=\"\"&&(c?d.g.hasOwnProperty(c)&&(d.g[c]=a):d.M[a]=!0)}}function M(a){var b=J;return b.g.hasOwnProperty(a)?b.g[a]:\"\"}function Pb(){var a=J,b=[];ub(a.M,function(c,d){b.push(d)});ub(a.g,function(c){c!=\"\"&&b.push(c)});return b};var Qb={aa:2,ka:13,ia:14,ea:16,ca:17,ba:18,Z:19,ma:20,la:21,Y:22},J=null;function Rb(){return!!J&&(M(20)==\"466465926\"||M(20)==\"466465925\")}function Sb(){return!!J&&M(16)==\"592230571\"}function Tb(){return!!J&&(M(22)==\"512247839\"||M(22)==\"512247838\")};function Ub(a){var b=b===void 0?B:b;var c,d;return((c=b.performance)==null?void 0:(d=c.timing)==null?void 0:d[a])||0};function Vb(){var a=Wb,b=\"J\";if(a.J&&a.hasOwnProperty(b))return a.J;b=new a;return a.J=b};var Xb={fa:0,V:1,ga:2,X:3,W:4};function Wb(){this.g={}}function Yb(a,b,c){typeof c===\"number\"&&c>0&&(a.g[b]=Math.round(c))}function Zb(a){var b=Vb();var c=c===void 0?B:c;c=c.performance;Yb(b,a,c&&c.now?c.now():null)}function $b(){function a(){return Yb(b,0,Ub(\"loadEventStart\")-Ub(\"navigationStart\"))}var b=Vb();Ub(\"loadEventStart\")!=0?a():window.addEventListener(\"load\",a)}function ac(){var a=Vb();return u(Object,\"values\").call(Object,Xb).map(function(b){return[b,a.g[b]||0]})};var bc=H(\"false\");var cc={};function dc(a){cc.TAGGING=cc.TAGGING||[];cc.TAGGING[a]=!0};var ec=[];function N(a){return ec[a]===void 0?!1:ec[a]};function fc(){}function gc(a){return typeof a===\"function\"}function hc(a){return typeof a===\"string\"}function ic(a,b){if(a&&Array.isArray(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]}function jc(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])};function kc(a){a=lc(a);return Ja(a)}function lc(a){return a===null?\"null\":a===void 0?\"undefined\":a};var O=window,P=document,mc=navigator,nc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},oc={onload:1,src:1,width:1,height:1,style:1};function pc(a,b,c){b&&jc(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 13,
                            "line": 34,
                            "offset": 14172
                        },
                        "start": {
                            "col": 12,
                            "line": 34,
                            "offset": 14171
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
            "start": {
                "col": 97,
                "line": 34,
                "offset": 14256
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 1331,
                "line": 39,
                "offset": 19511
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1331,
                                    "line": 39,
                                    "offset": 19511
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 1267,
                                    "line": 39,
                                    "offset": 19447
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "d755750e69e09e2491a4c487859a42e9674e6d395be25ede385f05e3a637d7f6346b892219584abf08a36d1c98ae95a43fc0449696fb3f0c7512c02b43efc5fd_1",
                "is_ignored": false,
                "lines": "3)<<4|l>>4];l=a[(l&15)<<2|h>>6];h=a[h&63];c[e++]=g+k+l+h}g=0;h=d;switch(b.length-f){case 2:g=b[f+1],h=a[(g&15)<<2]||d;case 1:b=b[f],c[e]=a[b>>2]+a[(b&3)<<4|g>>4]+h+d}return c.join(\"\")};function Ac(a,b,c,d,e,f){var g=pb(c,\"fmt\");if(d){var h=pb(c,\"random\"),k=pb(c,\"label\")||\"\";if(!h)return!1;h=zc(decodeURIComponent(k.replace(/\\+/g,\" \"))+\":\"+decodeURIComponent(h.replace(/\\+/g,\" \")));if(!vc(a,h,d))return!1}g&&Number(g)!==4&&(c=rb(c,\"rfmt\",g));c=rb(c,\"fmt\",4);qc(c,function(){a.google_noFurtherRedirects&&d&&(a.google_noFurtherRedirects=null,d())},e,f,b.getElementsByTagName(\"script\")[0].parentElement||void 0);return!0};var Bc={},Cc=(Bc.k={G:/^[\\w-]+$/},Bc.b={G:/^[\\w-]+$/,K:!0},Bc.i={G:/^[1-9]\\d*$/},Bc.u={G:/^[1-9]\\d*$/},Bc);var Dc={},Gc=(Dc[5]={P:{2:Ec},H:[\"k\",\"i\",\"b\",\"u\"]},Dc[4]={P:{2:Ec,GCL:Fc},H:[\"k\",\"i\",\"b\"]},Dc);function Ec(a,b){var c=a.split(\".\");if(c.length===3&&(a={},b=Gc[b])){b=b.H;c=z(c[2].split(\"$\"));for(var d=c.next();!d.done;d=c.next()){d=d.value;var e=d[0];if(b.indexOf(e)!==-1)try{var f=decodeURIComponent(d.substring(1)),g=Cc[e];g&&(g.K?(a[e]=a[e]||[],a[e].push(f)):a[e]=f)}catch(h){}}return a}}function Fc(a){a=a.split(\".\");a.shift();var b=a.shift(),c=a.shift(),d={};return d.k=c,d.i=b,d.b=a,d};function Hc(a){var b=[],c=P.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({L:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(f,g){return g.timestamp-f.timestamp});return b}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 1232,
                            "line": 39,
                            "offset": 19412
                        },
                        "start": {
                            "col": 1231,
                            "line": 39,
                            "offset": 19411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
            "start": {
                "col": 1267,
                "line": 39,
                "offset": 19447
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 372,
                "line": 79,
                "offset": 38083
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "b",
                            "location": {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 372,
                                    "line": 79,
                                    "offset": 38083
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 343,
                                    "line": 79,
                                    "offset": 38054
                                }
                            },
                            "new RegExp(\";\"+b+\"=([^;?]+)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            },
                            "b"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "d7663cfcab959dd292476354943444e5488407745121ed3adb53fb9fc9b9d1652add29ea02a784122af0b9088204bd46a1a9885c35b76376fcd4f92bfbad036b_0",
                "is_ignored": false,
                "lines": "function $d(a,b,c,d){for(var e=U(S())?Ic(\"_gac_gb\",!0):{},f=[],g=!1,h=z(u(Object,\"keys\").call(Object,e)),k=h.next();!k.done;k=h.next()){k=k.value;var l=Rd(\"_gac_gb_\"+k,b,c,d);g=g||l.length!==0&&l.some(function(m){return m===1});f.push(k+\":\"+l.join(\",\"))}return{T:g?f.join(\";\"):\"\",S:Zd(a,e,Yd)}}function ae(a,b){return(a=a.location.href.match(new RegExp(\";\"+b+\"=([^;?]+)\")))&&a.length===2&&a[1].match(Vd)?a[1]:void 0}",
                "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "b",
                        "end": {
                            "col": 310,
                            "line": 79,
                            "offset": 38021
                        },
                        "start": {
                            "col": 309,
                            "line": 79,
                            "offset": 38020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
            "start": {
                "col": 343,
                "line": 79,
                "offset": 38054
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 399,
                "line": 117,
                "offset": 57785
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "05eb8986895bd0a51fe1a4932eb39e6a48f63f88bf9790f7a7b069ff8f5985d2b3928aef39b16ff86450fe2196efb8f653ff027dd9d24c248fbe16a2b6040dfa_0",
                "is_ignored": false,
                "lines": "(function(a,b,c){if(a){Re(a,c,a);try{if(Ge(a)){var d=Ie(a);J&&I([\"375603260\",\"375603261\"],Lb?1:0,19);J&&I([\"512247838\",\"512247839\"],Mb?1:0,22);if(Te(c)==3){var e=\"google_conversion_\"+Math.floor(Math.random()*1E9);Ma(c,Xe({id:e}));We(function(){try{Je(c,d);var f=c.getElementById(e);if(f){var g=kc(Ee(a,b,c,d));if(f.nodeType===1&&/^(script|style)$/i.test(f.tagName))throw Error(\"\");f.innerHTML=Ka(g)}}catch(h){}},c)}else Je(c,d),Ma(c,kc(Ee(a,b,c,d)))}}catch(f){}He(a)}})(window,navigator,document);}).call(this);",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "f",
                        "end": {
                            "col": 383,
                            "line": 117,
                            "offset": 57769
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "c.getElementById(e)",
                            "svalue_end": {
                                "col": 282,
                                "line": 117,
                                "offset": 57668
                            },
                            "svalue_start": {
                                "col": 263,
                                "line": 117,
                                "offset": 57649
                            }
                        },
                        "start": {
                            "col": 382,
                            "line": 117,
                            "offset": 57768
                        }
                    },
                    "$HTML": {
                        "abstract_content": "Ka(g)",
                        "end": {
                            "col": 399,
                            "line": 117,
                            "offset": 57785
                        },
                        "start": {
                            "col": 394,
                            "line": 117,
                            "offset": 57780
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/conversion.js",
            "start": {
                "col": 382,
                "line": 117,
                "offset": 57768
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1070,
                "line": 58,
                "offset": 3795
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "74844f19580761eac1c8df85f05ae58f4d1843448a5e88d4e91ba910333fdfbf8aceaa705ba45008a33669080a70f8c4afc4f47a1cd49449f287c5ec1fe36a32_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"",
                        "end": {
                            "col": 1060,
                            "line": 58,
                            "offset": 3785
                        },
                        "start": {
                            "col": 148,
                            "line": 58,
                            "offset": 2873
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 141,
                "line": 58,
                "offset": 2866
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1149,
                "line": 58,
                "offset": 3874
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "53c4e6a6375899352866653b8a8ba1927418a4c201f9d159b9ddf1a622bd90a2128d2c345aeb1d9938294608e30a4b6b7d6290954872c32b43327ed81e11d912_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"",
                        "end": {
                            "col": 1139,
                            "line": 58,
                            "offset": 3864
                        },
                        "start": {
                            "col": 1077,
                            "line": 58,
                            "offset": 3802
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 1070,
                "line": 58,
                "offset": 3795
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 92,
                "line": 155,
                "offset": 8721
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "97a1a29fc858b1cf98dcd3cf8d2790f1db5cf087d32525bb6f9d3b3d6a608376e22b53718a1e1d6cc4d01779a292499d5efa7a028caf272704b276e5230e7c00_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"",
                        "end": {
                            "col": 82,
                            "line": 155,
                            "offset": 8711
                        },
                        "start": {
                            "col": 10,
                            "line": 155,
                            "offset": 8639
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 3,
                "line": 155,
                "offset": 8632
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 99,
                "line": 160,
                "offset": 9108
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "2314640f226ef2533122d5b3135c31e6e7942f6b954868305424c6ab4e1531f329cc156149aaf0ada17d08b5f8d7c859bffe87db2b9b87dbc5fb270ef3a7c2d7_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 160,
                            "offset": 9098
                        },
                        "start": {
                            "col": 10,
                            "line": 160,
                            "offset": 9019
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 3,
                "line": 160,
                "offset": 9012
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 123,
                "line": 161,
                "offset": 9232
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a5d502cc0c8629ea5596534ea8b149fc8c9e5add64db029ca438ed13a13feccb337113ab97fabfb17c3cc92cdf691f077303fef316ef009ae0fc9bd17b41d972_0",
                "is_ignored": false,
                "lines": "  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\"",
                        "end": {
                            "col": 122,
                            "line": 161,
                            "offset": 9231
                        },
                        "start": {
                            "col": 8,
                            "line": 161,
                            "offset": 9117
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 3,
                "line": 161,
                "offset": 9112
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 230,
                "offset": 11460
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "190929753e374c4959093915a796a2c02e6e6fd27960bea68f4e464687495fea3eef2cd597c4ad3ea2f9dc1b0dc389ffea5e4cb44f39faf540f52d1169b6a8eb_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783842262&amp;cv=9&amp;fst=1729783842262&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=376635471%2C375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=4&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2F&amp;tiba=Learn%20Web%20Scraping%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><iframe name=\"google_cookie_match_frame\" title=\"Google cookie match frame\" width=\"1\" height=\"1\" src=\"https://bid.g.doubleclick.net/xbbe/pixel?d=KAE\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" style=\"display:none\" scrolling=\"no\"></iframe>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\"",
                        "end": {
                            "col": 89,
                            "line": 229,
                            "offset": 11444
                        },
                        "start": {
                            "col": 12,
                            "line": 229,
                            "offset": 11367
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 5,
                "line": 229,
                "offset": 11360
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 696,
                "line": 230,
                "offset": 12142
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "e77a54d2d2791c7f6c940a805b20abaf3ce3a771aac4f1691563dac864a9b2f812b0762985b30a3c5aa8c1d872723fd61e1923c295f51b2e870a4a2954fecdac_0",
                "is_ignored": false,
                "lines": "    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783842262&amp;cv=9&amp;fst=1729783842262&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=376635471%2C375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=4&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2F&amp;tiba=Learn%20Web%20Scraping%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script><iframe name=\"google_cookie_match_frame\" title=\"Google cookie match frame\" width=\"1\" height=\"1\" src=\"https://bid.g.doubleclick.net/xbbe/pixel?d=KAE\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" style=\"display:none\" scrolling=\"no\"></iframe>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783842262&amp;cv=9&amp;fst=1729783842262&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=376635471%2C375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=4&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2F&amp;tiba=Learn%20Web%20Scraping%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 686,
                            "line": 230,
                            "offset": 12132
                        },
                        "start": {
                            "col": 21,
                            "line": 230,
                            "offset": 11467
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 14,
                "line": 230,
                "offset": 11460
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 681,
                "line": 247,
                "offset": 13705
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "1a75b7945182321ccd6f196a821de53a0723b33bf774bba9e4832cde53db1f55dece3f70b1d0fedfbab31c7f9d1b4e90cb19b9b015a8959cd29c894f529f4abb_0",
                "is_ignored": false,
                "lines": "<script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783842275&amp;cv=11&amp;fst=1729783842275&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Learn%20Web%20Scraping%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></body></html>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783842275&amp;cv=11&amp;fst=1729783842275&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Learn%20Web%20Scraping%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 671,
                            "line": 247,
                            "offset": 13695
                        },
                        "start": {
                            "col": 8,
                            "line": 247,
                            "offset": 13032
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/main/pages.html",
            "start": {
                "col": 1,
                "line": 247,
                "offset": 13025
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 529,
                "line": 10,
                "offset": 4860
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 529,
                                    "line": 10,
                                    "offset": 4860
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 486,
                                    "line": 10,
                                    "offset": 4817
                                }
                            },
                            "new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 477,
                                    "line": 10,
                                    "offset": 4808
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 476,
                                    "line": 10,
                                    "offset": 4807
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "7c2197eedf4aa4203f00b455ba3168fd6073562e90ec4bfb13b9bfdcdd7c2eae0075d8f20c62b0511e8b78734613705e63970a3bb85d1ae4f822e25ce4032b53_0",
                "is_ignored": false,
                "lines": "!c||h.forms)a:{g=h.domains;var k=a,m=!!h.sameHost;if(g&&(m||k!==I.location.hostname))for(var l=0;l<g.length;l++)if(g[l]instanceof RegExp){if(g[l].test(k)){g=!0;break a}}else if(0<=k.indexOf(g[l])||m&&0<=g[l].indexOf(k)){g=!0;break a}g=!1}g&&(g=h.placement,void 0==g&&(g=h.fragment?2:1),g===b&&z(e,h.callback()))}return e};function T(){var a=K(),b=a.gl;b&&b.decorators||(b={decorators:[]},a.gl=b);return b};var ja=/(.*?)\\*(.*?)\\*(.*)/,ka=/([^?#]+)(\\?[^#]*)?(#.*)?/;function W(a){return new RegExp(\"(.*?)(^|&)\"+a+\"=([^&]*)&?(.*)\")}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 477,
                            "line": 10,
                            "offset": 4808
                        },
                        "start": {
                            "col": 476,
                            "line": 10,
                            "offset": 4807
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
            "start": {
                "col": 486,
                "line": 10,
                "offset": 4817
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 189,
                "line": 27,
                "offset": 13919
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 189,
                                    "line": 27,
                                    "offset": 13919
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 150,
                                    "line": 27,
                                    "offset": 13880
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 115,
                                    "line": 27,
                                    "offset": 13845
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 114,
                                    "line": 27,
                                    "offset": 13844
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "7c2197eedf4aa4203f00b455ba3168fd6073562e90ec4bfb13b9bfdcdd7c2eae0075d8f20c62b0511e8b78734613705e63970a3bb85d1ae4f822e25ce4032b53_1",
                "is_ignored": false,
                "lines": "a.length;b++)if(\"$OPT_OUT\"==a[b])return!0;return Za.getElementById(\"__gaOptOutExtension\")?!0:!1};var Ca=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+a+\"=\\\\s*(.*?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push(e[1])}return b},zc=function(a,b,c,d,e,g,ca){e=G(e)?!1:eb.test(M.location.hostname)||\"/\"==c&&vc.test(d)?!1:!0;if(!e)return!1;b&&1200<b.length&&(b=b.substring(0,1200));c=a+\"=\"+b+\"; path=\"+c+\"; \";g&&(c+=\"expires=\"+(new Date((new Date).getTime()+g)).toGMTString()+\"; \");d&&\"none\"!==d&&(c+=\"domain=\"+d+\";\");ca&&(c+=ca+\";\");d=M.cookie;M.cookie=c;if(!(d=d!=M.cookie))a:{a=",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 115,
                            "line": 27,
                            "offset": 13845
                        },
                        "start": {
                            "col": 114,
                            "line": 27,
                            "offset": 13844
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
            "start": {
                "col": 150,
                "line": 27,
                "offset": 13880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 368,
                "line": 28,
                "offset": 14711
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 368,
                                    "line": 28,
                                    "offset": 14711
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 304,
                                    "line": 28,
                                    "offset": 14647
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 269,
                                    "line": 28,
                                    "offset": 14612
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 268,
                                    "line": 28,
                                    "offset": 14611
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "7c2197eedf4aa4203f00b455ba3168fd6073562e90ec4bfb13b9bfdcdd7c2eae0075d8f20c62b0511e8b78734613705e63970a3bb85d1ae4f822e25ce4032b53_2",
                "is_ignored": false,
                "lines": "Ca(a);for(d=0;d<a.length;d++)if(b==a[d]){d=!0;break a}d=!1}return d},Cc=function(a){return encodeURIComponent?encodeURIComponent(a).replace(/\\(/g,\"%28\").replace(/\\)/g,\"%29\"):a},vc=/^(www\\.)?google(\\.com?)?(\\.[a-z]{2})?$/,eb=/(^|\\.)doubleclick\\.net$/i;var Oe=function(a){var b=[],c=M.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({ja:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(g,ca){return ca.timestamp-g.timestamp});return b};",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 269,
                            "line": 28,
                            "offset": 14612
                        },
                        "start": {
                            "col": 268,
                            "line": 28,
                            "offset": 14611
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
            "start": {
                "col": 304,
                "line": 28,
                "offset": 14647
            }
        },
        {
            "check_id": "javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
            "end": {
                "col": 184,
                "line": 37,
                "offset": 19819
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "87a11c30b3bc0e7d91001616195036ea5b8f0b9891b13d4f815df398ce571bb09c508834afc9fdac267a72bb0620a3b668c31cf2c84a0ade2299170778860be1_0",
                "is_ignored": false,
                "lines": "a.U,a,c);break;case \"g\":wc(\"https://www.google.com/ads/ga-audiences\",a.google,c);(b=b.substring(1))&&(/^[a-z.]{1,6}$/.test(b)?wc(\"https://www.google.%/ads/ga-audiences\".replace(\"%\",b),a.google,ua):ge(\"tld\",\"bcc\",b));break;case \"G\":if(a.V){a.V(\"G-\"+b.substring(1));c();break}case \"x\":if(a.V){a.V();c();break}case \"c\":if(a.V){a.V(b.substring(1));c();break}default:ge(\"xhr\",\"brc\",d),c()}}},x=function(a,b,c){return O.navigator.sendBeacon?O.navigator.sendBeacon(a,b)?(c(),!0):!1:!1},ge=function(a,b,c){1<=",
                "message": "`\"https://www.google.%/ads/ga-audiences\".replace` method will only replace the first occurrence when used with a string argument (\"%\"). If this method is used for escaping of dangerous data then there is a possibility for a bypass. Try to use sanitization library instead or use a Regex with a global flag.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-116: Improper Encoding or Escaping of Output"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13466,
                            "rule_id": "d8UlRq",
                            "rv_id": 834144,
                            "url": "https://semgrep.dev/playground/r/44TQPdj/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                            "version_id": "44TQPdj"
                        }
                    },
                    "shortlink": "https://sg.run/1GbQ",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.incomplete-sanitization.incomplete-sanitization",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Improper Encoding"
                    ]
                },
                "metavars": {
                    "$1": {
                        "abstract_content": "%",
                        "end": {
                            "col": 3,
                            "line": 1,
                            "offset": 2
                        },
                        "start": {
                            "col": 2,
                            "line": 1,
                            "offset": 1
                        }
                    },
                    "$CHAR": {
                        "abstract_content": "\"%\"",
                        "end": {
                            "col": 181,
                            "line": 37,
                            "offset": 19816
                        },
                        "start": {
                            "col": 178,
                            "line": 37,
                            "offset": 19813
                        }
                    },
                    "$STR": {
                        "abstract_content": "\"https://www.google.%/ads/ga-audiences\"",
                        "end": {
                            "col": 169,
                            "line": 37,
                            "offset": 19804
                        },
                        "start": {
                            "col": 130,
                            "line": 37,
                            "offset": 19765
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
            "start": {
                "col": 130,
                "line": 37,
                "offset": 19765
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 650,
                "line": 48,
                "offset": 25710
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 650,
                                    "line": 48,
                                    "offset": 25710
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 629,
                                    "line": 48,
                                    "offset": 25689
                                }
                            },
                            "new RegExp(\"^\"+a+\"$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 616,
                                    "line": 48,
                                    "offset": 25676
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
                                "start": {
                                    "col": 615,
                                    "line": 48,
                                    "offset": 25675
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "7c2197eedf4aa4203f00b455ba3168fd6073562e90ec4bfb13b9bfdcdd7c2eae0075d8f20c62b0511e8b78734613705e63970a3bb85d1ae4f822e25ce4032b53_3",
                "is_ignored": false,
                "lines": "function hf(a,b){var c=gf[a];c&&J(c);\"displayFeaturesTask\"===a&&void 0==b&&J(96);/.*Task$/.test(a)&&J(92)}function mf(a,b){if(a)if(\"object\"===typeof a)for(var c in a)a.hasOwnProperty(c)&&hf(c,b);else hf(a,b)};var ue=new ee,ve=[],bb=function(a,b,c,d,e){this.name=a;this.F=b;this.Z=d;this.o=e;this.defaultValue=c};function $a(a){var b=ue.get(a);if(!b)for(var c=0;c<ve.length;c++){var d=ve[c],e=d[0].exec(a);if(e){b=d[1](e);ue.set(b.name,b);break}}return b}function yc(a){var b;ue.map(function(c,d){d.F==a&&(b=d)});return b&&b.name}function S(a,b,c,d,e){a=new bb(a,b,c,d,e);ue.set(a.name,a);return a.name}function cb(a,b){ve.push([new RegExp(\"^\"+a+\"$\"),b])}function T(a,b,c){return S(a,b,c,void 0,db)}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 616,
                            "line": 48,
                            "offset": 25676
                        },
                        "start": {
                            "col": 615,
                            "line": 48,
                            "offset": 25675
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/analytics.js",
            "start": {
                "col": 629,
                "line": 48,
                "offset": 25689
            }
        },
        {
            "check_id": "javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
            "end": {
                "col": 158,
                "line": 3,
                "offset": 886
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4959a76f60b3776b3045a756f15a6ed83f68cde26afb09da8c9a1b430fa58595e5dbe53781c658e9caa7336630137ae28a57053924cfea928b8c5a467151fff1_0",
                "is_ignored": false,
                "lines": "function x(a,b,c){if(b)a:{var d=a.split(\".\");a=d.length===1;var e=d[0],f;!a&&e in q?f=q:f=fa;for(e=0;e<d.length-1;e++){var g=d[e];if(!(g in f))break a;f=f[g]}d=d[d.length-1];c=ha&&c===\"es6\"?f[d]:null;b=b(c);b!=null&&(a?da(q,d,{configurable:!0,writable:!0,value:b}):b!==c&&(la[d]===void 0&&(a=Math.random()*1E9>>>0,la[d]=ha?fa.Symbol(d):\"$jscp$\"+a+\"$\"+d),da(f,la[d],{configurable:!0,writable:!0,value:b})))}}",
                "message": "Possibility of prototype polluting function detected. By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the software depends on existence or non-existence of certain attributes, or uses pre-defined attributes of object prototype (such as hasOwnProperty, toString or valueOf). Possible mitigations might be: freezing the object prototype, using an object without prototypes (via Object.create(null) ), blocking modifications of attributes that resolve to object prototype, using Map instead of object.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://github.com/HoLyVieR/prototype-pollution-nsec18/blob/master/paper/JavaScript_prototype_pollution_attack_in_NodeJS.pdf"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13373,
                            "rule_id": "QrUpbJ",
                            "rv_id": 834148,
                            "url": "https://semgrep.dev/playground/r/GxTDERG/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                            "version_id": "GxTDERG"
                        }
                    },
                    "shortlink": "https://sg.run/w1DB",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.prototype-pollution.prototype-pollution-loop.prototype-pollution-loop",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "typescript"
                    ],
                    "vulnerability_class": [
                        "Mass Assignment"
                    ]
                },
                "metavars": {
                    "$A": {
                        "abstract_content": "g",
                        "end": {
                            "col": 157,
                            "line": 3,
                            "offset": 885
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "d[e]",
                            "svalue_end": {
                                "col": 130,
                                "line": 3,
                                "offset": 858
                            },
                            "svalue_start": {
                                "col": 126,
                                "line": 3,
                                "offset": 854
                            }
                        },
                        "start": {
                            "col": 156,
                            "line": 3,
                            "offset": 884
                        }
                    },
                    "$SMTH": {
                        "abstract_content": "f",
                        "end": {
                            "col": 153,
                            "line": 3,
                            "offset": 881
                        },
                        "start": {
                            "col": 152,
                            "line": 3,
                            "offset": 880
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
            "start": {
                "col": 152,
                "line": 3,
                "offset": 880
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 134,
                "line": 34,
                "offset": 14293
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 134,
                                    "line": 34,
                                    "offset": 14293
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 97,
                                    "line": 34,
                                    "offset": 14256
                                }
                            },
                            "new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 13,
                                    "line": 34,
                                    "offset": 14172
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 12,
                                    "line": 34,
                                    "offset": 14171
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "ba5b05ac2a01ad6d6786c6ce683fd1b959c26edc069e744e8ab5db119af259be28e32ae9fd579bfbb3bfd7e54a5223ab2690ca6b912c927b441426b66788cd9f_0",
                "is_ignored": false,
                "lines": "function I(a,b,c){var d=J;if(c?d.g.hasOwnProperty(c)&&d.g[c]==\"\":1){var e;e=(e=Ob())?(e=e.match(new RegExp(\"\\\\b(\"+a.join(\"|\")+\")\\\\b\")))?e[0]:null:null;if(e)a=e;else a:{if(!yb()&&!xb()&&(e=Math.random(),e<b)){e=tb();a=a[Math.floor(e*a.length)];break a}a=null}a&&a!=\"\"&&(c?d.g.hasOwnProperty(c)&&(d.g[c]=a):d.M[a]=!0)}}function M(a){var b=J;return b.g.hasOwnProperty(a)?b.g[a]:\"\"}function Pb(){var a=J,b=[];ub(a.M,function(c,d){b.push(d)});ub(a.g,function(c){c!=\"\"&&b.push(c)});return b};var Qb={aa:2,ka:13,ia:14,ea:16,ca:17,ba:18,Z:19,ma:20,la:21,Y:22},J=null;function Rb(){return!!J&&(M(20)==\"466465926\"||M(20)==\"466465925\")}function Sb(){return!!J&&M(16)==\"592230571\"}function Tb(){return!!J&&(M(22)==\"512247839\"||M(22)==\"512247838\")};function Ub(a){var b=b===void 0?B:b;var c,d;return((c=b.performance)==null?void 0:(d=c.timing)==null?void 0:d[a])||0};function Vb(){var a=Wb,b=\"J\";if(a.J&&a.hasOwnProperty(b))return a.J;b=new a;return a.J=b};var Xb={fa:0,V:1,ga:2,X:3,W:4};function Wb(){this.g={}}function Yb(a,b,c){typeof c===\"number\"&&c>0&&(a.g[b]=Math.round(c))}function Zb(a){var b=Vb();var c=c===void 0?B:c;c=c.performance;Yb(b,a,c&&c.now?c.now():null)}function $b(){function a(){return Yb(b,0,Ub(\"loadEventStart\")-Ub(\"navigationStart\"))}var b=Vb();Ub(\"loadEventStart\")!=0?a():window.addEventListener(\"load\",a)}function ac(){var a=Vb();return u(Object,\"values\").call(Object,Xb).map(function(b){return[b,a.g[b]||0]})};var bc=H(\"false\");var cc={};function dc(a){cc.TAGGING=cc.TAGGING||[];cc.TAGGING[a]=!0};var ec=[];function N(a){return ec[a]===void 0?!1:ec[a]};function fc(){}function gc(a){return typeof a===\"function\"}function hc(a){return typeof a===\"string\"}function ic(a,b){if(a&&Array.isArray(a))for(var c=0;c<a.length;c++)if(a[c]&&b(a[c]))return a[c]}function jc(a,b){for(var c in a)Object.prototype.hasOwnProperty.call(a,c)&&b(c,a[c])};function kc(a){a=lc(a);return Ja(a)}function lc(a){return a===null?\"null\":a===void 0?\"undefined\":a};var O=window,P=document,mc=navigator,nc={async:1,nonce:1,onerror:1,onload:1,src:1,type:1},oc={onload:1,src:1,width:1,height:1,style:1};function pc(a,b,c){b&&jc(b,function(d,e){d=d.toLowerCase();c.hasOwnProperty(d)||a.setAttribute(d,e)})}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 13,
                            "line": 34,
                            "offset": 14172
                        },
                        "start": {
                            "col": 12,
                            "line": 34,
                            "offset": 14171
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
            "start": {
                "col": 97,
                "line": 34,
                "offset": 14256
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 1331,
                "line": 39,
                "offset": 19511
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "a",
                            "location": {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1331,
                                    "line": 39,
                                    "offset": 19511
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 1267,
                                    "line": 39,
                                    "offset": 19447
                                }
                            },
                            "new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 1232,
                                    "line": 39,
                                    "offset": 19412
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 1231,
                                    "line": 39,
                                    "offset": 19411
                                }
                            },
                            "a"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "ba5b05ac2a01ad6d6786c6ce683fd1b959c26edc069e744e8ab5db119af259be28e32ae9fd579bfbb3bfd7e54a5223ab2690ca6b912c927b441426b66788cd9f_1",
                "is_ignored": false,
                "lines": "3)<<4|l>>4];l=a[(l&15)<<2|h>>6];h=a[h&63];c[e++]=g+k+l+h}g=0;h=d;switch(b.length-f){case 2:g=b[f+1],h=a[(g&15)<<2]||d;case 1:b=b[f],c[e]=a[b>>2]+a[(b&3)<<4|g>>4]+h+d}return c.join(\"\")};function Ac(a,b,c,d,e,f){var g=pb(c,\"fmt\");if(d){var h=pb(c,\"random\"),k=pb(c,\"label\")||\"\";if(!h)return!1;h=zc(decodeURIComponent(k.replace(/\\+/g,\" \"))+\":\"+decodeURIComponent(h.replace(/\\+/g,\" \")));if(!vc(a,h,d))return!1}g&&Number(g)!==4&&(c=rb(c,\"rfmt\",g));c=rb(c,\"fmt\",4);qc(c,function(){a.google_noFurtherRedirects&&d&&(a.google_noFurtherRedirects=null,d())},e,f,b.getElementsByTagName(\"script\")[0].parentElement||void 0);return!0};var Bc={},Cc=(Bc.k={G:/^[\\w-]+$/},Bc.b={G:/^[\\w-]+$/,K:!0},Bc.i={G:/^[1-9]\\d*$/},Bc.u={G:/^[1-9]\\d*$/},Bc);var Dc={},Gc=(Dc[5]={P:{2:Ec},H:[\"k\",\"i\",\"b\",\"u\"]},Dc[4]={P:{2:Ec,GCL:Fc},H:[\"k\",\"i\",\"b\"]},Dc);function Ec(a,b){var c=a.split(\".\");if(c.length===3&&(a={},b=Gc[b])){b=b.H;c=z(c[2].split(\"$\"));for(var d=c.next();!d.done;d=c.next()){d=d.value;var e=d[0];if(b.indexOf(e)!==-1)try{var f=decodeURIComponent(d.substring(1)),g=Cc[e];g&&(g.K?(a[e]=a[e]||[],a[e].push(f)):a[e]=f)}catch(h){}}return a}}function Fc(a){a=a.split(\".\");a.shift();var b=a.shift(),c=a.shift(),d={};return d.k=c,d.i=b,d.b=a,d};function Hc(a){var b=[],c=P.cookie.split(\";\");a=new RegExp(\"^\\\\s*\"+(a||\"_gac\")+\"_(UA-\\\\d+-\\\\d+)=\\\\s*(.+?)\\\\s*$\");for(var d=0;d<c.length;d++){var e=c[d].match(a);e&&b.push({L:e[1],value:e[2],timestamp:Number(e[2].split(\".\")[1])||0})}b.sort(function(f,g){return g.timestamp-f.timestamp});return b}",
                "message": "RegExp() called with a `a` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "a",
                        "end": {
                            "col": 1232,
                            "line": 39,
                            "offset": 19412
                        },
                        "start": {
                            "col": 1231,
                            "line": 39,
                            "offset": 19411
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
            "start": {
                "col": 1267,
                "line": 39,
                "offset": 19447
            }
        },
        {
            "check_id": "javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
            "end": {
                "col": 372,
                "line": 79,
                "offset": 38083
            },
            "extra": {
                "dataflow_trace": {
                    "intermediate_vars": [
                        {
                            "content": "b",
                            "location": {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            }
                        }
                    ],
                    "taint_sink": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 372,
                                    "line": 79,
                                    "offset": 38083
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 343,
                                    "line": 79,
                                    "offset": 38054
                                }
                            },
                            "new RegExp(\";\"+b+\"=([^;?]+)\")"
                        ]
                    ],
                    "taint_source": [
                        "CliLoc",
                        [
                            {
                                "end": {
                                    "col": 310,
                                    "line": 79,
                                    "offset": 38021
                                },
                                "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
                                "start": {
                                    "col": 309,
                                    "line": 79,
                                    "offset": 38020
                                }
                            },
                            "b"
                        ]
                    ]
                },
                "engine_kind": "OSS",
                "fingerprint": "400c611ec7cb83072ccbd5e10f961fb82b07685a7373d82d42bbd6cf63860c1dfdadc522c268404e1b73ca5b2b8723a54cecf4ffc43e58cc818f7813165cac7f_0",
                "is_ignored": false,
                "lines": "function $d(a,b,c,d){for(var e=U(S())?Ic(\"_gac_gb\",!0):{},f=[],g=!1,h=z(u(Object,\"keys\").call(Object,e)),k=h.next();!k.done;k=h.next()){k=k.value;var l=Rd(\"_gac_gb_\"+k,b,c,d);g=g||l.length!==0&&l.some(function(m){return m===1});f.push(k+\":\"+l.join(\",\"))}return{T:g?f.join(\";\"):\"\",S:Zd(a,e,Yd)}}function ae(a,b){return(a=a.location.href.match(new RegExp(\";\"+b+\"=([^;?]+)\")))&&a.length===2&&a[1].match(Vd)?a[1]:void 0}",
                "message": "RegExp() called with a `b` function argument, this might allow an attacker to cause a Regular Expression Denial-of-Service (ReDoS) within your application as RegExP blocks the main thread. For this reason, it is recommended to use hardcoded regexes instead. If your regex is run on user-controlled input, consider performing input validation or use a regex checking/sanitization library such as https://www.npmjs.com/package/recheck to verify that the regex does not appear vulnerable to ReDoS.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-1333: Inefficient Regular Expression Complexity"
                    ],
                    "impact": "MEDIUM",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "MEDIUM",
                    "owasp": [
                        "A05:2021 - Security Misconfiguration",
                        "A06:2017 - Security Misconfiguration"
                    ],
                    "references": [
                        "https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 12685,
                            "rule_id": "zdU1gD",
                            "rv_id": 834140,
                            "url": "https://semgrep.dev/playground/r/8KTGkZw/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                            "version_id": "8KTGkZw"
                        }
                    },
                    "shortlink": "https://sg.run/gr65",
                    "source": "https://semgrep.dev/r/javascript.lang.security.audit.detect-non-literal-regexp.detect-non-literal-regexp",
                    "source-rule-url": "https://github.com/nodesecurity/eslint-plugin-security/blob/master/rules/detect-non-literal-regexp.js",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "javascript"
                    ],
                    "vulnerability_class": [
                        "Denial-of-Service (DoS)"
                    ]
                },
                "metavars": {
                    "$ARG": {
                        "abstract_content": "b",
                        "end": {
                            "col": 310,
                            "line": 79,
                            "offset": 38021
                        },
                        "start": {
                            "col": 309,
                            "line": 79,
                            "offset": 38020
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
            "start": {
                "col": 343,
                "line": 79,
                "offset": 38054
            }
        },
        {
            "check_id": "javascript.browser.security.insecure-document-method.insecure-document-method",
            "end": {
                "col": 399,
                "line": 117,
                "offset": 57785
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "e7dc537407d9709cabb45be5aef6352eae9df81f7a6f7a04b28617b382c38c38ac2bd2b37efb1b7bbb4450969d248275ad4d54d45fd0a65a049dfb599971a5fb_0",
                "is_ignored": false,
                "lines": "(function(a,b,c){if(a){Re(a,c,a);try{if(Ge(a)){var d=Ie(a);J&&I([\"375603260\",\"375603261\"],Lb?1:0,19);J&&I([\"512247838\",\"512247839\"],Mb?1:0,22);if(Te(c)==3){var e=\"google_conversion_\"+Math.floor(Math.random()*1E9);Ma(c,Xe({id:e}));We(function(){try{Je(c,d);var f=c.getElementById(e);if(f){var g=kc(Ee(a,b,c,d));if(f.nodeType===1&&/^(script|style)$/i.test(f.tagName))throw Error(\"\");f.innerHTML=Ka(g)}}catch(h){}},c)}else Je(c,d),Ma(c,kc(Ee(a,b,c,d)))}}catch(f){}He(a)}})(window,navigator,document);}).call(this);",
                "message": "User controlled data in methods like `innerHTML`, `outerHTML` or `document.write` is an anti-pattern that can lead to XSS vulnerabilities",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                    ],
                    "cwe2021-top25": true,
                    "cwe2022-top25": true,
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A07:2017 - Cross-Site Scripting (XSS)",
                        "A03:2021 - Injection"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A03_2021-Injection"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 9239,
                            "rule_id": "ReUg41",
                            "rv_id": 834049,
                            "url": "https://semgrep.dev/playground/r/A8T37l8/javascript.browser.security.insecure-document-method.insecure-document-method",
                            "version_id": "A8T37l8"
                        }
                    },
                    "shortlink": "https://sg.run/LwA9",
                    "source": "https://semgrep.dev/r/javascript.browser.security.insecure-document-method.insecure-document-method",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "browser"
                    ],
                    "vulnerability_class": [
                        "Cross-Site-Scripting (XSS)"
                    ]
                },
                "metavars": {
                    "$EL": {
                        "abstract_content": "f",
                        "end": {
                            "col": 383,
                            "line": 117,
                            "offset": 57769
                        },
                        "propagated_value": {
                            "svalue_abstract_content": "c.getElementById(e)",
                            "svalue_end": {
                                "col": 282,
                                "line": 117,
                                "offset": 57668
                            },
                            "svalue_start": {
                                "col": 263,
                                "line": 117,
                                "offset": 57649
                            }
                        },
                        "start": {
                            "col": 382,
                            "line": 117,
                            "offset": 57768
                        }
                    },
                    "$HTML": {
                        "abstract_content": "Ka(g)",
                        "end": {
                            "col": 399,
                            "line": 117,
                            "offset": 57785
                        },
                        "start": {
                            "col": 394,
                            "line": 117,
                            "offset": 57780
                        }
                    }
                },
                "severity": "ERROR",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/conversion.js",
            "start": {
                "col": 382,
                "line": 117,
                "offset": 57768
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 87,
                "line": 15,
                "offset": 1122
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "137cc8f7f0cfa030ead9e30b3c7842577b7ba38b58bcedbb52b4c1d61141fda51ea7a133e4264df89ca1c1e92d7390f65eead9d7beceb1200bf91e20d51786f5_0",
                "is_ignored": false,
                "lines": "<link href=\"https://lipis.github.io/flag-icon-css/css/flag-icon.css\" rel=\"stylesheet\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://lipis.github.io/flag-icon-css/css/flag-icon.css\" rel=\"stylesheet\"",
                        "end": {
                            "col": 86,
                            "line": 15,
                            "offset": 1121
                        },
                        "start": {
                            "col": 6,
                            "line": 15,
                            "offset": 1041
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 1,
                "line": 15,
                "offset": 1036
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1070,
                "line": 61,
                "offset": 4028
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "9ffc4a5339ad694ccc733b938cc0d4fbfd6593e2ff32cf16594b3fa130e0e0f41cef2ed4ada5786031b89f6e4dd6a94bd2cebb9023f7a7454ff2c260dec1c736_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"",
                        "end": {
                            "col": 1060,
                            "line": 61,
                            "offset": 4018
                        },
                        "start": {
                            "col": 148,
                            "line": 61,
                            "offset": 3106
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 141,
                "line": 61,
                "offset": 3099
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 1149,
                "line": 61,
                "offset": 4107
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "dd3be8a504a10f859ad6d3834d6cc3351d5e8dddb78eff9c498627f8b36b281006f81a37ff63e54eff782bb968829d7fcca2ffa8366bc593021264b04c7371cc_0",
                "is_ignored": false,
                "lines": "        <script type=\"text/javascript\" async=\"\" src=\"https://www.googletagmanager.com/gtag/js?id=G-09N5RQCFG4&amp;cx=c&amp;_slc=1\"></script><script src=\"https://connect.facebook.net/signals/config/764287443701341?v=2.9.173&amp;r=stable&amp;domain=www.scrapethissite.com&amp;hme=ead923021ccd3483ef3b9b04703d0a78b943fbdc01e8d7cec21c5059f1f4a5e9&amp;ex_m=70%2C121%2C107%2C111%2C61%2C4%2C100%2C69%2C16%2C97%2C89%2C51%2C54%2C172%2C175%2C187%2C183%2C184%2C186%2C29%2C101%2C53%2C77%2C185%2C167%2C170%2C180%2C181%2C188%2C131%2C41%2C34%2C143%2C15%2C50%2C194%2C193%2C133%2C18%2C40%2C1%2C43%2C65%2C66%2C67%2C71%2C93%2C17%2C14%2C96%2C92%2C91%2C108%2C52%2C110%2C39%2C109%2C30%2C94%2C26%2C168%2C171%2C140%2C86%2C56%2C84%2C33%2C73%2C0%2C95%2C32%2C28%2C82%2C83%2C88%2C47%2C46%2C87%2C37%2C11%2C12%2C13%2C6%2C7%2C25%2C22%2C23%2C57%2C62%2C64%2C75%2C102%2C27%2C76%2C9%2C8%2C80%2C48%2C21%2C104%2C103%2C105%2C98%2C10%2C20%2C3%2C38%2C74%2C19%2C5%2C90%2C81%2C44%2C35%2C85%2C2%2C36%2C63%2C42%2C106%2C45%2C79%2C68%2C112%2C60%2C59%2C31%2C99%2C58%2C55%2C49%2C78%2C72%2C24%2C113\" async=\"\"></script><script async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"></script><script async=\"\" src=\"https://www.google-analytics.com/analytics.js\"></script><script type=\"text/javascript\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " async=\"\" src=\"https://connect.facebook.net/en_US/fbevents.js\"",
                        "end": {
                            "col": 1139,
                            "line": 61,
                            "offset": 4097
                        },
                        "start": {
                            "col": 1077,
                            "line": 61,
                            "offset": 4035
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 1070,
                "line": 61,
                "offset": 4028
            }
        },
        {
            "check_id": "html.security.plaintext-http-link.plaintext-http-link",
            "end": {
                "col": 161,
                "line": 114,
                "offset": 6719
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "3b832b4568e7f0be1378b87337f04d6ce584948ba6740623721ce92c3833947e6a02ed9bc83f9079ff0cba67488a5a29e8ebc6287ca338cdf604bd015b845c3b_0",
                "is_ignored": false,
                "lines": "                                <a href=\"http://peric.github.io/GetCountries/\" class=\"data-attribution\" target=\"_blank\">http://peric.github.io/GetCountries/</a>",
                "message": "This link points to a plaintext HTTP URL. Prefer an encrypted HTTPS URL if possible.",
                "metadata": {
                    "category": "security",
                    "confidence": "HIGH",
                    "cwe": [
                        "CWE-319: Cleartext Transmission of Sensitive Information"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A03:2017 - Sensitive Data Exposure",
                        "A02:2021 - Cryptographic Failures"
                    ],
                    "references": [
                        "https://cwe.mitre.org/data/definitions/319.html"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 39193,
                            "rule_id": "AbUnNo",
                            "rv_id": 833891,
                            "url": "https://semgrep.dev/playground/r/ExTrDzp/html.security.plaintext-http-link.plaintext-http-link",
                            "version_id": "ExTrDzp"
                        }
                    },
                    "shortlink": "https://sg.run/RA5q",
                    "source": "https://semgrep.dev/r/html.security.plaintext-http-link.plaintext-http-link",
                    "subcategory": [
                        "vuln"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Mishandled Sensitive Information"
                    ]
                },
                "metavars": {
                    "$URL": {
                        "abstract_content": "http://peric.github.io/GetCountries/",
                        "end": {
                            "col": 78,
                            "line": 114,
                            "offset": 6636
                        },
                        "start": {
                            "col": 42,
                            "line": 114,
                            "offset": 6600
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 33,
                "line": 114,
                "offset": 6591
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 92,
                "line": 3892,
                "offset": 205196
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "c4c4394bbfb40e4d44b6ccb50721fd01f85b42d234bf0d3dc6fff9c0c50787b13d58badcd27f71f8b7585d2fa708a7fddeb7fba6ef4ee9f35763c7436ff929d6_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js\"",
                        "end": {
                            "col": 82,
                            "line": 3892,
                            "offset": 205186
                        },
                        "start": {
                            "col": 10,
                            "line": 3892,
                            "offset": 205114
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 3,
                "line": 3892,
                "offset": 205107
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 99,
                "line": 3897,
                "offset": 205583
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "fcf79b2fdb557f2e801d86037bb6e7324fe4124bf8f5b9e73975bf964f2d44882e5c184687939f243f7d169de418b4074e56d7f2d18208fb1bd180809f9ecf46_0",
                "is_ignored": false,
                "lines": "  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " src=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.js\"",
                        "end": {
                            "col": 89,
                            "line": 3897,
                            "offset": 205573
                        },
                        "start": {
                            "col": 10,
                            "line": 3897,
                            "offset": 205494
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 3,
                "line": 3897,
                "offset": 205487
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 123,
                "line": 3898,
                "offset": 205707
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "259a4f18e74b0f0884ed3d66b6ba8258d5f64b6bd7981b1c70a764df746ee574398c19565dfabbd010d7e22075d40f9131f004ede0b4e852ac960518e9ef6cc6_0",
                "is_ignored": false,
                "lines": "  <link href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\">",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " href=\"https://cdnjs.cloudflare.com/ajax/libs/pnotify/2.1.0/pnotify.core.min.css\" rel=\"stylesheet\" type=\"text/css\"",
                        "end": {
                            "col": 122,
                            "line": 3898,
                            "offset": 205706
                        },
                        "start": {
                            "col": 8,
                            "line": 3898,
                            "offset": 205592
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 3,
                "line": 3898,
                "offset": 205587
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 14,
                "line": 3967,
                "offset": 207935
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "2b5e01d5435c37b6c85c32da5248c49ed55d3f54481fd94b0baded663534c794a0ba6dc7ed65edfdbdf77499c4c2767668244eaeae759259a574daec03e6f8b7_0",
                "is_ignored": false,
                "lines": "    <script type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\">\n    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783885036&amp;cv=9&amp;fst=1729783885036&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=8&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2Fsimple%2F&amp;tiba=Countries%20of%20the%20World%3A%20A%20Simple%20Example%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" src=\"//www.googleadservices.com/pagead/conversion.js\"",
                        "end": {
                            "col": 89,
                            "line": 3966,
                            "offset": 207919
                        },
                        "start": {
                            "col": 12,
                            "line": 3966,
                            "offset": 207842
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 5,
                "line": 3966,
                "offset": 207835
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 725,
                "line": 3967,
                "offset": 208646
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "4b09de9d3d367fc3d8c33135554ce545a89f8b5374d5370d56a362dd0f71fdc08877252876e3d70cd09b1675e3a5cc8674c3ecb00fd413b768a844e8386455ee_0",
                "is_ignored": false,
                "lines": "    </script><script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783885036&amp;cv=9&amp;fst=1729783885036&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=8&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2Fsimple%2F&amp;tiba=Countries%20of%20the%20World%3A%20A%20Simple%20Example%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"></script>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783885036&amp;cv=9&amp;fst=1729783885036&amp;num=1&amp;guid=ON&amp;resp=GooglemKTybQhCsO&amp;eid=375603261%2C466465926%2C512247839&amp;u_h=720&amp;u_w=1280&amp;u_ah=720&amp;u_aw=1280&amp;u_cd=24&amp;u_his=8&amp;u_tz=180&amp;u_java=false&amp;u_nplug=0&amp;u_nmime=0&amp;sendb=1&amp;ig=1&amp;frm=0&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2Fsimple%2F&amp;tiba=Countries%20of%20the%20World%3A%20A%20Simple%20Example%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;hn=www.googleadservices.com&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 715,
                            "line": 3967,
                            "offset": 208636
                        },
                        "start": {
                            "col": 21,
                            "line": 3967,
                            "offset": 207942
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 14,
                "line": 3967,
                "offset": 207935
            }
        },
        {
            "check_id": "html.security.audit.missing-integrity.missing-integrity",
            "end": {
                "col": 722,
                "line": 3984,
                "offset": 209960
            },
            "extra": {
                "engine_kind": "OSS",
                "fingerprint": "a68310e70c2b05286823db2f28e224732f3bd2c8256a9c96eb402ef907cc242b9cad5c0d4fe7198b287137d4d6166d6a6a144e64f202c44f0180c3aaeb7032aa_0",
                "is_ignored": false,
                "lines": "<script type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783885060&amp;cv=11&amp;fst=1729783885060&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2Fsimple%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Countries%20of%20the%20World%3A%20A%20Simple%20Example%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"></script></body></html>",
                "message": "This tag is missing an 'integrity' subresource integrity attribute. The 'integrity' attribute allows for the browser to verify that externally hosted files (for example from a CDN) are delivered without unexpected manipulation. Without this attribute, if an attacker can modify the externally hosted resource, this could lead to XSS and other types of attacks. To prevent this, include the base64-encoded cryptographic hash of the resource (file) you're telling the browser to fetch in the 'integrity' attribute for all externally hosted files.",
                "metadata": {
                    "category": "security",
                    "confidence": "LOW",
                    "cwe": [
                        "CWE-353: Missing Support for Integrity Check"
                    ],
                    "impact": "LOW",
                    "license": "Commons Clause License Condition v1.0[LGPL-2.1-only]",
                    "likelihood": "LOW",
                    "owasp": [
                        "A08:2021 - Software and Data Integrity Failures"
                    ],
                    "references": [
                        "https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures"
                    ],
                    "semgrep.dev": {
                        "rule": {
                            "origin": "community",
                            "r_id": 13728,
                            "rule_id": "AbUQzj",
                            "rv_id": 833890,
                            "url": "https://semgrep.dev/playground/r/nWTy4vO/html.security.audit.missing-integrity.missing-integrity",
                            "version_id": "nWTy4vO"
                        }
                    },
                    "shortlink": "https://sg.run/krXA",
                    "source": "https://semgrep.dev/r/html.security.audit.missing-integrity.missing-integrity",
                    "subcategory": [
                        "audit"
                    ],
                    "technology": [
                        "html"
                    ],
                    "vulnerability_class": [
                        "Cryptographic Issues"
                    ]
                },
                "metavars": {
                    "$...A": {
                        "abstract_content": " type=\"text/javascript\" async=\"\" src=\"https://googleads.g.doubleclick.net/pagead/viewthroughconversion/950945448/?random=1729783885060&amp;cv=11&amp;fst=1729783885060&amp;bg=ffffff&amp;guid=ON&amp;async=1&amp;gtm=45be4al0za200&amp;gcd=13l3l3l3l1l1&amp;dma=0&amp;tag_exp=101686685~101794737~101823847&amp;u_w=1280&amp;u_h=720&amp;url=http%3A%2F%2Fwww.scrapethissite.com%2Fpages%2Fsimple%2F&amp;hn=www.googleadservices.com&amp;frm=0&amp;tiba=Countries%20of%20the%20World%3A%20A%20Simple%20Example%20%7C%20Scrape%20This%20Site%20%7C%20A%20public%20sandbox%20for%20learning%20web%20scraping&amp;npa=0&amp;pscdl=noapi&amp;auid=983958203.1729783835&amp;fdr=QA&amp;data=event%3Dgtag.config&amp;rfmt=3&amp;fmt=4\"",
                        "end": {
                            "col": 712,
                            "line": 3984,
                            "offset": 209950
                        },
                        "start": {
                            "col": 8,
                            "line": 3984,
                            "offset": 209246
                        }
                    }
                },
                "severity": "WARNING",
                "validation_state": "NO_VALIDATOR"
            },
            "path": "/mnt/c/Users/Administrator/source/repos/WebScan/ScrapedFiles/pages/simple/main/simple.html",
            "start": {
                "col": 1,
                "line": 3984,
                "offset": 209239
            }
        }
    ],
    "skipped_rules": [],
    "version": "1.96.0"
}